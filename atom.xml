<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>郭晓忠的博客</title>
  <subtitle>机械男，程序员，前军校学员，穷逼博士。。。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.spartajet.com/"/>
  <updated>2017-05-20T00:16:47.000Z</updated>
  <id>http://blog.spartajet.com/</id>
  
  <author>
    <name>郭晓忠</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nginx 最全小白实战教程之三 （代理TCP篇）</title>
    <link href="http://blog.spartajet.com/2017/05/20/2017-05-20/"/>
    <id>http://blog.spartajet.com/2017/05/20/2017-05-20/</id>
    <published>2017-05-20T00:00:52.000Z</published>
    <updated>2017-05-20T00:16:47.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Nginx代理TCP主要是使用stream模块，这个功能是从1.9.0版本开始的。<br>我用它来代理Mysql。</p>
</blockquote>
<p>###一、配置代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">stream &#123;</div><div class="line">    upstream mysqls &#123;</div><div class="line">        hash $remote_addr consistent;</div><div class="line">        server 192.168.58.143:3306 weight=5 max_fails=3 fail_timeout=30s;</div><div class="line">        server 192.168.58.142:3306 weight=1 max_fails=3 fail_timeout=30s;</div><div class="line">    &#125;</div><div class="line">    server &#123;</div><div class="line">        listen 9945;</div><div class="line">        proxy_connect_timeout 1s;</div><div class="line">        proxy_timeout 3s;</div><div class="line">        proxy_pass mysqls;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个就是一个最基本的配置</p>
<p>有几个注意的地方：</p>
<ol>
<li><code>stream</code>的配置必须是和<code>events</code>同级的，所以我直接就写在了<code>nginx.conf</code>主配置文件中的，这样就确保了和<code>events</code>同级。当然也可以单独写出来。</li>
<li>这里的<code>server</code>里面是不准写<code>location</code>的，所以就不能判断<code>\sss\</code>这样的路径来做的。我开始的时候想这样的，模仿<code>spring</code>实现的<code>websocket</code>，后来才意识到，<code>websocket</code>可以这样是因为它连接是靠<code>http</code>协议的，传输才靠<code>tcp</code>的。终于明白了。</li>
<li><code>server</code>的监听端口不能和<code>http</code>的重复。</li>
<li>重新加载nginx时候可能会出现错误：<code>[emerg] 30181#0: bind() to 0.0.0.0:8090 failed (13: Permission denied)</code> 这个错误是由于<code>SElinux</code>，关掉这就好了。</li>
<li>关闭<code>SElinux</code>方法：修改<code>/etc/selinux/config</code> 文件，将<code>SELINUX=enforcing</code>改为<code>SELINUX=disabled</code>重启之后就好了。</li>
</ol>
<h3 id="二、用法"><a href="#二、用法" class="headerlink" title="二、用法"></a>二、用法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">语法:	listen address:port [ssl] [udp] [proxy_protocol] [backlog=number] [bind] [ipv6only=on|off] [reuseport] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];</div><div class="line">默认值: —</div><div class="line">上下文: server</div></pre></td></tr></table></figure>
<p>设置方式可以是下面任意一种：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">listen 127.0.0.1:12345;</div><div class="line">listen *:12345;</div><div class="line">listen 12345;     # same as *:12345</div><div class="line">listen localhost:12345;</div></pre></td></tr></table></figure>
<p>IPV6必须加上中括号：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">listen [::1]:12345;</div><div class="line">listen [::]:12345;</div></pre></td></tr></table></figure>
<p>UNIX-domain sockets要写<code>unix:</code> 前缀</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">listen unix:/var/run/nginx.sock;</div></pre></td></tr></table></figure>
<p><code>ssl</code><br>指定连接此端口的连接都是<code>SSL模式</code></p>
<p><code>udp</code><br>用于处理套接字</p>
<p><code>proxy_protocol</code><br>指定此端口上的所有连接都使用 <a href="http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt" target="_blank" rel="external">PROXY protocol</a>协议</p>
<p><code>backlog=number</code><br>限制挂起连接队列的最大长度（1.9.2）。默认情况下，backlog在FreeBSD，DragonFly BSD和Mac OS X上设置为-1，在其他平台上设置为511。</p>
<p><code>bind</code><br>表示对一个指定的<code>address:port</code>对进行单独的绑定。实是，如果有几个listen指令具有相同的端口但地址不同，并且其中一个listen指令监听给定端口<code>（\*：port）</code>的所有地址，nginx将只绑定<code>\*：port</code>。 应该注意，在这种情况下调用getsockname（）以确定接受连接的地址。 如果使用ipv6only或so_keepalive参数，那么对于给定的地址：端口对将始终进行单独的绑定。</p>
<p><code>ipv6only=on|off</code><br>确定侦听通配符地址[::]的IPv6套接字是否只接受IPv6连接，或者是接受IPv6和IPv4连接。 此参数默认处于打开状态。 且它只能在启动时设置一次。</p>
<p><code>so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]</code><br>此参数配置侦听套接字的<code>“TCP keepalive”</code>行为。 如果省略此参数，则操作系统的设置将对套接字生效。 如果将其设置为值“on”，则套接字的SO_KEEPALIVE选项将打开。 如果它设置为值“off”，则套接字的SO_KEEPALIVE选项被关闭。 某些操作系统支持使用TCP_KEEPIDLE，TCP_KEEPINTVL和TCP_KEEPCNT套接字选项在每个套接字上设置TCP保持活动参数。 在这些系统（目前，Linux 2.4+，NetBSD 5+和FreeBSD 9.0-STABLE）上，可以使用keepidle，keepintvl和keepcnt参数配置它们。 可以省略一个或两个参数，在这种情况下，相应套接字选项的系统默认设置将有效。 例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">so_keepalive=30m::10</div></pre></td></tr></table></figure>
<h3 id="三、相关指令"><a href="#三、相关指令" class="headerlink" title="三、相关指令"></a>三、相关指令</h3><p>1.指定<a href="https://nginx.org/en/docs/stream/stream_processing.html#preread_phase" target="_blank" rel="external">preread</a> buffer的大小</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Syntax:	preread_buffer_size size;</div><div class="line">Default:	</div><div class="line">preread_buffer_size 16k;</div><div class="line">Context:	stream, server</div></pre></td></tr></table></figure>
<p>2.指定<a href="https://nginx.org/en/docs/stream/stream_processing.html#preread_phase" target="_blank" rel="external">preread</a> buffer的超时时间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Syntax:	preread_timeout timeout;</div><div class="line">Default:	</div><div class="line">preread_timeout 30s;</div><div class="line">Context:	stream, server</div></pre></td></tr></table></figure>
<p>3.指定完成读取代理协议头的超时时间，如果超过这个时间，就关闭连接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Syntax:	proxy_protocol_timeout timeout;</div><div class="line">Default:	</div><div class="line">proxy_protocol_timeout 30s;</div><div class="line">Context:	stream, server</div></pre></td></tr></table></figure>
<p>4.配置用于将upstream servers中名称解析到地址的服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Syntax:	resolver address ... [valid=time] [ipv6=on|off];</div><div class="line">Default:	—</div><div class="line">Context:	stream, server</div><div class="line">This directive appeared in version 1.11.3.</div></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">resolver 127.0.0.1 [::1]:5353;</div><div class="line">resolver 127.0.0.1 [::1]:5353 valid=30s;</div></pre></td></tr></table></figure>
<p>5.名字解析的超时时间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Syntax:	resolver_timeout time;</div><div class="line">Default:	</div><div class="line">resolver_timeout 30s;</div><div class="line">Context:	stream, server</div></pre></td></tr></table></figure>
<p>6.配置服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Syntax:	server &#123; ... &#125;</div><div class="line">Default:	—</div><div class="line">Context:	stream</div></pre></td></tr></table></figure>
<p>7.配置stream服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Syntax:	stream &#123; ... &#125;</div><div class="line">Default:	—</div><div class="line">Context:	main</div></pre></td></tr></table></figure>
<p>8.配置是否允许<code>TCP_NODELAY</code>选项，这个可以用在客户端和代理服务器上</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Syntax:	tcp_nodelay on | off;</div><div class="line">Default:	</div><div class="line">tcp_nodelay on;</div><div class="line">Context:	stream, server</div></pre></td></tr></table></figure>
<p>9.设置变量的哈希表容量。 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Syntax:	variables_hash_bucket_size size;</div><div class="line">Default:	</div><div class="line">variables_hash_bucket_size 64;</div><div class="line">Context:	stream</div></pre></td></tr></table></figure>
<p>10.设置变量的哈希表最大容量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Syntax:	variables_hash_max_size size;</div><div class="line">Default:	</div><div class="line">variables_hash_max_size 1024;</div><div class="line">Context:	stream</div><div class="line">This directive appeared in version 1.11.2.</div></pre></td></tr></table></figure>
<p>###四、相关变量</p>
<ol>
<li><code>$binary_remote_addr</code>：二进制形式的客户端地址，对于IPv4地址，值的长度始终为4字节，对于IPv6地址，值的长度始终为16字节</li>
<li><code>$bytes_received</code>：从客户端接收到的字节数</li>
<li><code>$bytes_sent</code>：发送到客户端的字节数</li>
<li><code>$connection</code>：连接序列号</li>
<li><code>$hostname</code>：host名称</li>
<li><code>$msec</code>：当前时间(秒)，以毫秒为单位</li>
<li><code>$nginx_version</code>：nginx版本</li>
<li><code>$pid</code>：work process的pid</li>
<li><code>$protocol</code>：和客户端通信的协议：TCP或者UDP</li>
<li><code>$proxy_protocol_addr</code>：PROXY协议头中的客户端地址，或者为空字符串。<strong>必须先通过在listen指令中设置proxy_protocol参数才能启用PROXY协议。</strong></li>
<li><code>$proxy_protocol_port</code>：PROXY协议头中的客户端端口，或者为空字符串。<strong>必须先通过在listen指令中设置proxy_protocol参数才能启用PROXY协议。</strong></li>
<li><code>$remote_addr</code>：客户端地址</li>
<li><code>$server_addr</code>：接收连接的服务器地址。<strong>计算此变量的值通常需要一次系统调用。 为了避免系统调用，listen指令必须指定地址并使用bind参数。</strong></li>
<li><code>$server_port</code>：接收连接的服务器端口</li>
<li><code>$session_time</code>：会话持续时间（秒），以毫秒为单位</li>
<li><code>$time_iso8601</code>：ISO8610格式的本地时间</li>
<li><code>$time_local</code>：通用日志格式的本地时间</li>
<li><code>status</code>：状态值。200：会话完成；400：客户端数据无法解析，例如PROXY协议头；403：访问受限；500：内部服务器错误；502：网关错误；503：服务不可用。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      Nginx代理TCP主要是使用stream模块，这个功能是从1.9.0版本开始的。
    
    </summary>
    
    
      <category term="Nginx" scheme="http://blog.spartajet.com/tags/Nginx/"/>
    
      <category term="代理" scheme="http://blog.spartajet.com/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="教程" scheme="http://blog.spartajet.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="TCP" scheme="http://blog.spartajet.com/tags/TCP/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 最全小白实战教程之二 （代理篇）</title>
    <link href="http://blog.spartajet.com/2017/05/20/nginx-doc-02/"/>
    <id>http://blog.spartajet.com/2017/05/20/nginx-doc-02/</id>
    <published>2017-05-20T00:00:52.000Z</published>
    <updated>2017-05-20T00:02:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、相关概念"><a href="#一、相关概念" class="headerlink" title="一、相关概念"></a>一、相关概念</h2><p>代理一般分为正向代理和反向代理，以下是他们的定义(以下内容引自网上)</p>
<blockquote>
<p><strong>正向代理</strong>，也就是传说中的代理,他的工作原理就像一个跳板，简单的说，我是一个用户，我访问不了某网站，但是我能访问一个代理服务器，这个代理服务器呢，他能访问那个我不能访问的网站，于是我先连上代理服务器，告诉他我需要那个无法访问网站的内容，代理服务器去取回来，然后返回给我。从网站的角度，只在代理服务器来取内容的时候有一次记录，有时候并不知道是用户的请求，也隐藏了用户的资料，这取决于代理告不告诉网站。<br>结论就是，正向代理 是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。客户端必须要进行一些特别的设置才能使用正向代理。</p>
<p><strong>反向代理</strong> 例如用户访问 <a href="http://www.test.com/readme" target="_blank" rel="external">http://www.test.com/readme</a> ，但www.test.com上并不存在readme页面，他是偷偷从另外一台服务器上取回来，然后作为自己的内容返回用户，但用户并不知情。这里所提到的 www.test.com 这个域名对应的服务器就设置了反向代理功能。<br>结论就是，反向代理正好相反，对于客户端而言它就像是原始服务器，并且客户端不需要进行任何特别的设置。客户端向反向代理的命名空间(name-space)中的内容发送普通请求，接着反向代理将判断向何处(原始服务器)转交请求，并将获得的内容返回给客户端，就像这些内容原本就是它自己的一样。</p>
</blockquote>
<p>两者区别就是：</p>
<ol>
<li>从<strong>用途</strong>上讲，正向代理的典型用途是为在防火墙内的局域网客户端提供访问Internet的途径。正向代理还可以使用缓冲特性减少网络使用率。反向代理的典型用途是将防火墙后面的服务器提供给Internet用户访问。反向代理还可以为后端的多台服务器提供负载平衡，或为后端较慢的服务器提供缓冲服务。另外，反向代理还可以启用高级URL策略和管理技术，从而使处于不同web服务器系统的web页面同时存在于同一个URL空间下。</li>
<li>从<strong>安全性</strong>讲，正向代理允许客户端通过它访问任意网站并且隐藏客户端自身，因此你必须采取安全措施以确保仅为经过授权的客户端提供服务。反向代理对外都是透明的，访问者并不知道自己访问的是一个代理。</li>
</ol>
<h2 id="二、Nginx代理"><a href="#二、Nginx代理" class="headerlink" title="二、Nginx代理"></a>二、Nginx代理</h2><h4 id="1-简单的代理"><a href="#1-简单的代理" class="headerlink" title="1.简单的代理"></a>1.简单的代理</h4><p>这样安装的配置文件位置在<code>/etc/nginx/conf.d</code>。其中有一个默认的配置文件<code>default.conf</code>，内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80;</div><div class="line">    server_name  localhost;</div><div class="line"></div><div class="line">    #charset koi8-r;</div><div class="line">    #access_log  /var/log/nginx/log/host.access.log  main;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">        root   /usr/share/nginx/html;</div><div class="line">        index  index.html index.htm;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    #error_page  404              /404.html;</div><div class="line"></div><div class="line">    # redirect server error pages to the static page /50x.html</div><div class="line">    #</div><div class="line">    error_page   500 502 503 504  /50x.html;</div><div class="line">    location = /50x.html &#123;</div><div class="line">        root   /usr/share/nginx/html;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</div><div class="line">    #</div><div class="line">    #location ~ \.php$ &#123;</div><div class="line">    #    proxy_pass   http://127.0.0.1;</div><div class="line">    #&#125;</div><div class="line"></div><div class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class="line">    #</div><div class="line">    #location ~ \.php$ &#123;</div><div class="line">    #    root           html;</div><div class="line">    #    fastcgi_pass   127.0.0.1:9000;</div><div class="line">    #    fastcgi_index  index.php;</div><div class="line">    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</div><div class="line">    #    include        fastcgi_params;</div><div class="line">    #&#125;</div><div class="line"></div><div class="line">    # deny access to .htaccess files, if Apache&apos;s document root</div><div class="line">    # concurs with nginx&apos;s one</div><div class="line">    #</div><div class="line">    #location ~ /\.ht &#123;</div><div class="line">    #    deny  all;</div><div class="line">    #&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这是一个比较全面的配置文件。且该目录下所有的<code>.conf</code>文件都会加载的，只要配置不冲突，所有的配置都会生效。</p>
<p>接下来在此目录新建<code>guo.conf</code>，将此域名访问代理我的个人博客 www.guoxiaozhong.cn。<br>具体内容如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80;</div><div class="line">    server_name  你的域名或者IP;  </div><div class="line">    location / &#123;</div><div class="line">        proxy_pass http://www.guoxiaozhong.cn;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>重新加载配置文件;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost conf.d]# service nginx reload</div><div class="line">Reloading nginx:                                           [  OK  ]</div><div class="line">[root@localhost conf.d]# service nginx restart</div><div class="line">Stopping nginx:                                            [  OK  ]</div><div class="line">Starting nginx:                                            [  OK  ]</div></pre></td></tr></table></figure>
<p>访问效果如下：<br><img src="http://ghost.guoxiaozhong.cn/ghost/2017-01-03-030235.jpg" alt=""></p>
<p>目前的代理拓扑图为：<br><img src="http://ghost.guoxiaozhong.cn/ghost/2017-01-03-031823.jpg" alt=""></p>
<h4 id="2-指令说明"><a href="#2-指令说明" class="headerlink" title="2.指令说明"></a>2.指令说明</h4><p><strong>listen</strong>:要监听的端口，我们一般都是监听80端口，其他端口都封死，防火墙只剩80<br><strong>server_name</strong>：服务器的IP或者绑定的域名<br><strong>location /</strong>：这个是路径的意思，<code>/</code>这个是代表访问的路径，<code>/</code>代表根目录</p>
<p><strong>proxy_pass</strong>指令：</p>
<p>语法：proxyz_pass URL<br>默认值：no<br>使用字段：location，location中的if字段</p>
<p>这个指令设置被代理服务器的地址和被映射的URI，地址可以使用主机名或IP加端口号的形式，例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">proxy_pass http://www.guoxiaozhong.cn;</div></pre></td></tr></table></figure>
<p><strong>注意</strong>：一定要写<code>http://</code></p>
<h4 id="3-分析日志"><a href="#3-分析日志" class="headerlink" title="3.分析日志"></a>3.分析日志</h4><h5 id="博客服务器的日志"><a href="#博客服务器的日志" class="headerlink" title="博客服务器的日志"></a>博客服务器的日志</h5><p>www.guoxiaozhong 博客服务器的日志</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Nginx服务器的IP - - [03/Jan/2017:10:49:19 +0800] &quot;GET /2016/11/29/office-2016-for-mac-de-wordmo-ban-wen-jian-jia-wei-zhi/ HTTP/1.0&quot; 200 4112 &quot;设置的代理域名&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36&quot; &quot;-&quot;</div><div class="line">Nginx服务器的IP - - [03/Jan/2017:10:49:20 +0800] &quot;GET /content/images/2016/10/logo.jpeg HTTP/1.0&quot; 206 1 &quot;设置的代理域名&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36&quot; &quot;-&quot;</div><div class="line">Nginx服务器的IP - - [03/Jan/2017:10:49:20 +0800] &quot;GET /content/images/2016/10/logo.jpeg HTTP/1.0&quot; 206 1778 &quot;设置的代理域名&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36&quot; &quot;-&quot;</div><div class="line">Nginx服务器的IP - - [03/Jan/2017:10:49:21 +0800] &quot;GET /assets/images/favicon.png HTTP/1.0&quot; 200 2562 &quot;设置的代理域名&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36&quot; &quot;-&quot;</div><div class="line">Nginx服务器的IP - - [03/Jan/2017:11:01:53 +0800] &quot;GET / HTTP/1.0&quot; 200 3951 &quot;-&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36&quot; &quot;-&quot;</div><div class="line">Nginx服务器的IP - - [03/Jan/2017:11:01:53 +0800] &quot;GET /assets/css/vno.css?v=6d7f73f25e HTTP/1.0&quot; 200 4187 &quot;设置的代理域名&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36&quot; &quot;-&quot;</div><div class="line">Nginx服务器的IP - - [03/Jan/2017:11:01:54 +0800] &quot;GET /assets/css/tomorrow.css?v=6d7f73f25e HTTP/1.0&quot; 200 610 &quot;http://xtrader.spartajet.com/&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36&quot; &quot;-&quot;</div><div class="line">Nginx服务器的IP - - [03/Jan/2017:11:01:54 +0800] &quot;GET /assets/css/animate.css HTTP/1.0&quot; 200 5066 &quot;设置的代理域名&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36&quot; &quot;-&quot;</div><div class="line">Nginx服务器的IP - - [03/Jan/2017:11:01:55 +0800] &quot;GET /assets/js/main.js?v=6d7f73f25e HTTP/1.0&quot; 200 662 &quot;设置的代理域名&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36&quot; &quot;-&quot;</div><div class="line">Nginx服务器的IP - - [03/Jan/2017:11:01:55 +0800] &quot;GET /assets/js/highlight.pack.js?v=6d7f73f25e HTTP/1.0&quot; 200 15760 &quot;http://xtrader.spartajet.com/&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36&quot; &quot;-&quot;</div></pre></td></tr></table></figure>
<p>可以看到，我的博客服务器上的日志只显示Nginx的IP和Nginx设置的域名，没有客户端的信息。</p>
<p>#####Nginx代理服务器的日志</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">客户端IP - - [03/Jan/2017:11:01:55 +0800] &quot;GET /assets/js/highlight.pack.js?v=6d7f73f25e HTTP/1.1&quot; 200 15788 &quot;设置的代理域名&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36&quot; &quot;-&quot;</div><div class="line">客户端IP - - [03/Jan/2017:11:01:58 +0800] &quot;GET /content/images/2016/10/logo.jpeg HTTP/1.1&quot; 200 42960 &quot;设置的代理域名&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36&quot; &quot;-&quot;</div><div class="line">客户端IP - - [03/Jan/2017:11:02:13 +0800] &quot;GET /content/images/2016/10/e69ef0aa357bd34022b2824daf3b5a33_r-1.jpg HTTP/1.1&quot; 200 176528 &quot;设置的代理域名&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36&quot; &quot;-&quot;</div><div class="line">客户端IP - - [03/Jan/2017:11:02:16 +0800] &quot;GET /assets/images/favicon.png HTTP/1.1&quot; 200 2562 &quot;设置的代理域名&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36&quot; &quot;-&quot;</div></pre></td></tr></table></figure>
<p>代理服务器上的日志显示客户端的IP。</p>
<h4 id="4-配置文件显示客户端IP"><a href="#4-配置文件显示客户端IP" class="headerlink" title="4.配置文件显示客户端IP"></a>4.配置文件显示客户端IP</h4><p>配置<code>guo.conf</code>文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80;</div><div class="line">    server_name  博客代理域名;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">        proxy_pass http://www.guoxiaozhong.cn;</div><div class="line">        proxy_set_header            X-real-ip $remote_addr;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>主要是加上;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">proxy_set_header            X-real-ip $remote_addr;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      介绍正向代理和反向代理的内容及配置方法
    
    </summary>
    
    
      <category term="Nginx" scheme="http://blog.spartajet.com/tags/Nginx/"/>
    
      <category term="代理" scheme="http://blog.spartajet.com/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="教程" scheme="http://blog.spartajet.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>NJ4X源码阅读分析笔记系列（一）——项目整体分析</title>
    <link href="http://blog.spartajet.com/2017/05/20/2017-05-20-1/"/>
    <id>http://blog.spartajet.com/2017/05/20/2017-05-20-1/</id>
    <published>2017-05-20T00:00:52.000Z</published>
    <updated>2017-05-20T00:23:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NJ4X源码阅读分析笔记系列（一）——项目整体分析"><a href="#NJ4X源码阅读分析笔记系列（一）——项目整体分析" class="headerlink" title="NJ4X源码阅读分析笔记系列（一）——项目整体分析"></a>NJ4X源码阅读分析笔记系列（一）——项目整体分析</h1><h2 id="NJ4X是什么"><a href="#NJ4X是什么" class="headerlink" title="NJ4X是什么"></a>NJ4X是什么</h2><p>参见NJ4X的官网：<a href="http://www.nj4x.com/" target="_blank" rel="external">http://www.nj4x.com/</a></p>
<blockquote>
<p>Java and .Net interfaces to supported Forex brokers in a legal and robust way.</p>
<p>这个NJ4X是个乌克兰人写的，代码风格相当彪悍，不愧是战斗民族。</p>
</blockquote>
<p><img src="http://ghost.guoxiaozhong.cn/ghost/2016-11-27-063804.jpg" alt=""><br>大题的架构图如下：<br><img src="http://ghost.guoxiaozhong.cn/ghost/2016-11-27-064028.jpg" alt=""><br><img src="http://ghost.guoxiaozhong.cn/ghost/2016-11-27-064054.jpg" alt=""></p>
<p>##本文研究的NJ4X版本<br>2.6.2</p>
<p>##NJ4X的整体架构<br>NJ4X由以下六部分组成：</p>
<ul>
<li><strong>mt4if</strong> MT4语言的C++接口（MT4 Interface DLL）</li>
<li><strong>nj4x-ts</strong> NJ4X终端服务器(NJ4X Terminal Server)</li>
<li><strong>jfx</strong> MT4 终端API，JAVA版（JFX MT4 Terminal API for Java）</li>
<li><strong>nj4x</strong> MT4 终端API，.NET版 (NJ4X MT4 Terminal API for .Net)</li>
<li><strong>ea</strong> 专家系统 (JFX Expert Advisor)</li>
<li><strong>zero-term</strong> 具体不明，不知道是干什么，后期有时间会分析。<br>##运行系统要求<br>官方推荐用<strong>windows</strong>，因为有C++的库。但是看Q&amp;A上面也有说可以在<code>Linux</code>下运行的，原理是采用<strong>WINE</strong>，我没有试过，有兴趣的可以自己去试试。MAC下也可以使用WINE，我没有试过。</li>
</ul>
<p>参见：<a href="http://www.nj4x.com/faqs" target="_blank" rel="external">How can I run Terminal Server on WINE (Linux)?</a></p>
<p>##用到的工具</p>
<ul>
<li><strong>JDK1.7以上</strong> 我用的是1.8</li>
<li><strong>Visual Studio2013以上</strong> 我用的是2015</li>
<li><strong>Maven</strong> 3.3.9</li>
<li><strong>Nuget.exe</strong> 这个要说一下，现在的vs自带nuget，但是我不知道nuget的具体目录，只能单独下载一个。</li>
<li><strong>launch4j</strong> 这个是把jar可执行程序转换为exe的。</li>
<li><strong>7Zip</strong> 负责解压的，用来解压zrv</li>
</ul>
<p>##项目转换</p>
<p>其中<strong>mt4if</strong>，<strong>nj4x</strong>这两个项目需要在VS转换为本地VS能够处理的。<strong>mt4if</strong>是<code>C++</code>写的，<strong>nj4x</strong>是<code>C#</code>写的。</p>
<p>转换的话就是在VS中打开，然后按照提示操作就行了，和我们用高版本VS打开低版本的VS开发的项目是一样的。</p>
<p><strong>记住，转换之后就可以关闭VS了，VS可以歇菜了，不要用VS编译项目</strong></p>
<p>##项目编译<br>首先在项目根目录下的<code>pom.xml</code>中设置好所需工具的路径，设置成为你自己的路径。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;zip7&gt;C:\Program Files\7-Zip\7z.exe&lt;/zip7&gt;</div><div class="line">&lt;devenv&gt;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\devenv.exe&lt;/devenv&gt;</div><div class="line">&lt;mstest&gt;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\MSTest.exe&lt;/mstest&gt;</div><div class="line">&lt;launch4j.dir&gt;C:\Program Files (x86)\Launch4j&lt;/launch4j.dir&gt;</div></pre></td></tr></table></figure>
<p>首先进入<code>mt4if</code>模块中，<code>mvn pacakge</code>编译好C++库。然后就可以在编译你需要的模块了。</p>
<p>如果想编译整个项目，就在根目录下<code>mvn pacakge</code>，但是容易出错，你要重试好多次，过程比较麻烦。</p>
<p>最后，项目如图所示：<br><img src="http://ghost.guoxiaozhong.cn/ghost/2016-11-27-073708.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      NJ4X 源码源码阅读分析第一次，系统分析
    
    </summary>
    
    
      <category term="NJ4X" scheme="http://blog.spartajet.com/tags/NJ4X/"/>
    
      <category term="源码分析" scheme="http://blog.spartajet.com/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>NJ4X源码阅读分析笔记系列（二）—— nj4x-ts初步分析</title>
    <link href="http://blog.spartajet.com/2017/05/20/2017-05-20-2/"/>
    <id>http://blog.spartajet.com/2017/05/20/2017-05-20-2/</id>
    <published>2017-05-20T00:00:52.000Z</published>
    <updated>2017-05-20T00:24:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>##nj4x-ts简介<br><strong>nj4x-ts</strong>是NJ4X项目中的终端服务器，参考我的上篇博客<a href="http://www.guoxiaozhong.cn/2016/11/27/nj4xyuan-ma-yue-du-fen-xi-bi-ji-xi-lie-yi-xiang-mu-zheng-ti-fen-xi/" target="_blank" rel="external">NJ4X源码阅读分析笔记系列（一）——项目整体分析</a>中的图：<br><img src="http://ghost.guoxiaozhong.cn/ghost/2016-11-27-080124.jpg" alt=""><br>方框中就是<strong>nj4x-ts</strong>的角色。</p>
<p><strong>nj4x-ts</strong>起着承上启下的作用，<strong>nj4x-ts</strong>提供了面向中断的网络通讯接口，操作底层的C++函数操作mt4的程序。然后让整个系统跑起来。</p>
<p>##包结构<br>包结构如图：<br><img src="http://ghost.guoxiaozhong.cn/ghost/2016-11-27-101946.jpg" alt=""><br>作用如下：</p>
<ul>
<li><strong>gui</strong> 界面</li>
<li><strong>io</strong> 引用dll库，文件操作</li>
<li><strong>jmx</strong> JMX服务器</li>
<li><strong>net</strong> 网络通讯相关</li>
<li><strong>xml</strong> xml操作类</li>
</ul>
<h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>编译的时候，会出现问题，大致就是找不到dll，到时候要注意调整dll的路径，编译会直接生成课执行<code>jar</code>包，<code>exe</code>可执行程序程序，如下图：<br><img src="http://ghost.guoxiaozhong.cn/ghost/2016-11-27-7992119353B363E037142B2886D5683C.png" alt=""></p>
<p>其中<code>antrun</code>文件夹下是<code>ant</code>的编译脚本。</p>
<p>这样就编译完了整个项目。</p>
<p>##启动过程<br><strong>nj4x-ts</strong>的启动过程非常值得一提。</p>
<p>###入口函数<br>入口函数在<code>com.jfx.ts.net.TerminalServer</code>类中。</p>
<p>首先开始读取<code>main</code>函数的参数<code>args</code>，我们一般不给这个写参数。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">if (args.length % 2 == 0) &#123;</div><div class="line">                for (int i = 0; i &lt; args.length; i++) &#123;</div><div class="line">                    String pn = args[i++];</div><div class="line">                    String pv = args[i];</div><div class="line">                    System.setProperty(pn, pv);   //指定系统的全局属性</div><div class="line">                &#125;</div><div class="line">            &#125;</div></pre></td></tr></table></figure>
<p>然后加载dll库:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LibrariesUtil.initEmbeddedLibraries();</div></pre></td></tr></table></figure>
<p><code>initEmbeddedLibraries()</code>加载dll之前，<code>LibrariesUtil</code>有一个静态块，静态块在构造函数之前运行，用以判断操作系统的位数，以及初始化程序的相关路径：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">static &#123;</div><div class="line">        String osName = System.getProperty(&quot;os.name&quot;);</div><div class="line">        isWindows = osName.toLowerCase().contains(&quot;windows&quot;);</div><div class="line">        String arch = System.getProperty(&quot;os.arch&quot;);</div><div class="line">        isX64 = arch.contains(&quot;amd64&quot;) || arch.contains(&quot;x64&quot;);</div><div class="line">        LIBS_DIR = System.getProperty(&quot;program_data_dir&quot;, &quot;C:\\ProgramData\\nj4x&quot;) + &quot;\\bin&quot;;</div><div class="line">//        LIBS_DIR = System.getProperty(&quot;user.dir&quot;);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>然后再调用<code>initEmbeddedLibraries()</code>函数，根据位数选择相应的dll。奇怪的是，作者并没有直接复制dll，而是直接二进制读取原路径的dll，然后在目标路径新建一个dll，把二进制写入新的dll文件，然后再<code>System.load()</code>，很奇怪，也许作者这样做是想确保每次的dll都是最新的。代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">final File libFile = new File(libFileName);   //     C:\ProgramData\nj4x\bin\PSUtils_x64.dll</div><div class="line">//</div><div class="line">final InputStream in = nativeLibraryUrl.openStream();</div><div class="line">final OutputStream out = new BufferedOutputStream(new FileOutputStream(libFile));</div><div class="line">//</div><div class="line">int len;</div><div class="line">byte[] buffer = new byte[160000];</div><div class="line">while ((len = in.read(buffer)) &gt; -1)</div><div class="line">    out.write(buffer, 0, len);  //写入dll文件</div><div class="line">out.close();</div><div class="line">in.close();</div><div class="line">//</div><div class="line">System.load(libFile.getAbsolutePath()); //加载PSUtil_X64.dll这个dll</div></pre></td></tr></table></figure>
<p>至此，dll加载完毕。</p>
<p>接下来就判断程序是不是以管理员身份登录的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">asAdministrator = PSUtils.asAdministrator();</div></pre></td></tr></table></figure>
<p>具体方法在<code>com.jfx.ts.io.PSUtils</code>中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">public static boolean asAdministrator() &#123;</div><div class="line">    if (!isAdministrator()) &#123;</div><div class="line">        String compat_layer = System.getenv().get(&quot;__COMPAT_LAYER&quot;);</div><div class="line">        if (compat_layer == null || !compat_layer.contains(&quot;RunAsAdmin&quot;)) &#123;</div><div class="line">            return false;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return true;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>而<code>isAdministrator()</code>是一个<code>native</code>静态方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">public static native boolean isAdministrator();</div></pre></td></tr></table></figure>
<p>这个方法是使用的<code>PSUtils_x64.dll</code>的native方法。因为<code>com.jfx.ts.io.PSUtils</code>中有一个静态块：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">// Load the dll that exports functions callable from java</div><div class="line">static &#123;</div><div class="line">    if (!LibrariesUtil.IS_OK) &#123;</div><div class="line">        String dllFileName = null;</div><div class="line">        try &#123;</div><div class="line">            if (LibrariesUtil.isX64) &#123;</div><div class="line">                dllFileName = &quot;PSUtils_x64.dll&quot;;</div><div class="line">            &#125; else &#123;</div><div class="line">                dllFileName = &quot;PSUtils.dll&quot;;</div><div class="line">            &#125;</div><div class="line">            String libFileName = LibrariesUtil.LIBS_DIR + File.separator + </div><div class="line">            System.load(libFileName);</div><div class="line">        &#125; catch (Throwable t) &#123;</div><div class="line">            t.printStackTrace();</div><div class="line">            try &#123;</div><div class="line">                System.load(dllFileName);</div><div class="line">            &#125; catch (Exception e) &#123;</div><div class="line">                System.exit(2);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>没错，这就是战斗民族的代码。</p>
<p>接下来就是确定最大线程数，不知道战斗民族为什么把代码写的如此复杂：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//最大线程数，不知道为什么要搞得这么复杂</div><div class="line">           MAX_TERMINAL_STARTUP_THREADS = Integer.parseInt(System.getProperty(&quot;max_terminal_connection_threads&quot;, &quot;&quot; +</div><div class="line">                   (AVAILABLE_PROCESSORS &gt;= 24 ? AVAILABLE_PROCESSORS / 2</div><div class="line">                           : (AVAILABLE_PROCESSORS &gt;= 12 ? AVAILABLE_PROCESSORS / 3</div><div class="line">                           : (AVAILABLE_PROCESSORS &gt; 3 ? AVAILABLE_PROCESSORS - 2</div><div class="line">                           : AVAILABLE_PROCESSORS)))));</div></pre></td></tr></table></figure></p>
<p>然后判断，要不要启动专家系统，默认是不启动的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">IS_DEPLOY_EA_WS = System.getProperty(&quot;deploy_EA_WS&quot;, &quot;false&quot;).equals(&quot;true&quot;);</div></pre></td></tr></table></figure></p>
<p>作者在代码中大量的使用<code>System.getProperty()</code>方法操作参数，思路不错。</p>
<p>真正的部署程序在这个方面里面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">deploy(port);</div></pre></td></tr></table></figure></p>
<p><code>deploy(port)</code>方法首先打印出所有的系统环境变量和程序设置的参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">Logger logger = TS.LOGGER;</div><div class="line">//</div><div class="line">logger.info(&quot;--&quot;);</div><div class="line">logger.info(&quot;--&quot;);</div><div class="line">logger.info(&quot;--&quot;);</div><div class="line">logger.info(&quot;-- TS &quot; + TS.NJ4X + &quot; STARTUP --&quot;);</div><div class="line">logger.info(&quot;-- &quot; + TS.NJ4X_UUID + &quot; --&quot;);</div><div class="line">logger.info(&quot;--&quot;);</div><div class="line">logger.info(&quot;--&quot;);</div><div class="line">logger.info(&quot;--&quot;);</div><div class="line">logger.info(&quot;-- System properties --&quot;);</div><div class="line">for (Map.Entry e : new TreeMap&lt;&gt;(System.getProperties()).entrySet()) &#123;</div><div class="line">    logger.info(&quot;&quot; + e.getKey() + &quot;=&quot; + e.getValue());</div><div class="line">&#125;</div><div class="line">logger.info(&quot;-- Environment --&quot;);</div><div class="line">for (Map.Entry e : new TreeMap&lt;&gt;(System.getenv()).entrySet()) &#123;</div><div class="line">    logger.info(&quot;&quot; + e.getKey() + &quot;=&quot; + e.getValue());</div><div class="line">&#125;</div><div class="line">logger.info(&quot;-- Deployment --&quot;);</div></pre></td></tr></table></figure></p>
<p>然后实例化<code>TS</code>类，<code>TS</code>作用下一节再分析。</p>
<p>接下来就部署WebService服务，具体由<code>TsWS</code>类实现。</p>
<p>关于<strong>nj4x-ts</strong>的网络通信部分，会在下一篇博客中做介绍，在此略过。</p>
<p>但是作者在最后又默认启动专家系统的webserive，不知道为什么，现在没有计划研究专家系统，以后有可能。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//部署专家系统webservice</div><div class="line">deployEaWs(true);</div></pre></td></tr></table></figure></p>
<p>总之，启动后的样子：<br><img src="http://ghost.guoxiaozhong.cn/ghost/2016-11-27-CD30BEFE6B52C7FDF5FB96790233A6FF.jpg" alt=""></p>
<p>这个界面就不介绍了，懂的人自然懂。</p>
<h2 id="TS类的分析"><a href="#TS类的分析" class="headerlink" title="TS类的分析"></a><code>TS</code>类的分析</h2><p><code>TS</code>类要单独拿出来分析，因为，以上的启动过程都是表面上的，程序启动真正干活的是<code>TS</code>类。</p>
<p><code>TS</code>类中的各个静态变量，可以自己看。</p>
<p>首先，<code>TS</code>类有三个静态块：</p>
<p>第一个我不知道是干嘛用的,目的不明确：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">static &#123;</div><div class="line">    try &#123;</div><div class="line">        //不知道为什么要外部程序，不知道是干什么的，跑起来之后看看hostname是个什么鬼</div><div class="line">        //但是这个是简化外部当前JVM进程的执行。</div><div class="line">        ExternalProcess p = new ExternalProcess(&quot;hostname&quot;);</div><div class="line">        p.run();</div><div class="line">        TS.hostname = p.getOut().trim();</div><div class="line">    &#125; catch (Exception e) &#123;</div><div class="line">        TS.LOGGER.error(&quot;hostname cmd error&quot;, e);</div><div class="line">        TS.hostname = System.getenv(&quot;COMPUTERNAME&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>第二个初始化JFX的HOME路径：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">static &#123;</div><div class="line">    //貌似是初始化JFX的HOME路径</div><div class="line">    JFX_HOME = System.getProperty(&quot;home&quot;, System.getProperty(&quot;user.hom</div><div class="line">    System.setProperty(&quot;home&quot;, JFX_HOME);</div><div class="line">    String tmout = System.getenv(&quot;JFX_TERM_IDLE_TMOUT_SECONDS&quot;);</div><div class="line">    if (tmout == null) &#123;</div><div class="line">        JFX_TERM_IDLE_TMOUT_SECONDS = 3600 * 6;</div><div class="line">    &#125; else &#123;</div><div class="line">        JFX_TERM_IDLE_TMOUT_SECONDS = Long.parseLong(tmout);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>第三个非常重要，其作用是初始化程序运行的各种路径文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">static &#123;</div><div class="line">    //mkdir函数，如果存在就返回false</div><div class="line">    new File(getTargetTermDir()).mkdirs();</div><div class="line">    //</div><div class="line">    new File(JFX_HOME_CONFIG).mkdirs();</div><div class="line">    new File(JFX_HOME_SRV_DIR).mkdirs();</div><div class="line">    new File(JFX_HOME_EA_DIR).mkdirs();</div><div class="line">    new File(JFX_HOME_EXPERTS_DIR).mkdirs();</div><div class="line">    new File(JFX_HOME_INDICATORS_DIR).mkdirs();</div><div class="line">    new File(JFX_HOME_CHR_DIR).mkdirs();</div><div class="line">    //</div><div class="line">    TerminalClient terminalClient = null;</div><div class="line">    try &#123;</div><div class="line">        terminalClient = new TerminalClient(&quot;127.0.0.1&quot;, Integer.parseInt(System.getProperty(&quot;port&quot;, &quot;7788&quot;)));</div><div class="line">        TS.P_GUI_ONLY = true;</div><div class="line">        if (!TS.P_USE_MSTSC) &#123;</div><div class="line">            String mode = terminalClient.ask(ClientWorkerThread.GETMODE).toLowerCase();</div><div class="line">            if (mode.contains(&quot;mstsc=true&quot;)) &#123;</div><div class="line">                TS.P_USE_MSTSC = true;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125; catch (IOException e) &#123;</div><div class="line">        //ignore, seems this is 1st TS instance or port is used by another app</div><div class="line">    &#125; finally &#123;</div><div class="line">        if (terminalClient != null) &#123;</div><div class="line">            try &#123;</div><div class="line">                terminalClient.close();</div><div class="line">            &#125; catch (IOException ignore) &#123;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    //</div><div class="line">    LOGGING_CONFIG_XML = JFX_HOME_CONFIG + File.separatorChar + (P_GUI_ONLY ? &quot;gui_&quot; : &quot;&quot;) + &quot;logging.xml&quot;;</div><div class="line">    if (!new File(LOGGING_CONFIG_XML).exists()) &#123;</div><div class="line">        try &#123;</div><div class="line">            String loggingXml = ResourceReader.getClassResourceReader(TerminalServer.class, true).getProperty(&quot;logging.xml&quot;);</div><div class="line">            if (P_GUI_ONLY) &#123;</div><div class="line">                loggingXml = loggingXml.replace(&quot;jfx_term.log&quot;, &quot;gui_jfx_term.log&quot;);</div><div class="line">            &#125;</div><div class="line">            writeFile(LOGGING_CONFIG_XML, loggingXml.replace(&quot;./jfx_term/&quot;, JFX_HOME.replace(&apos;\\&apos;, &apos;/&apos;) + &quot;/&quot;).getBytes());</div><div class="line">        &#125; catch (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    //</div><div class="line">    if (!new File(JMX_CONFIG_XML).exists()) &#123;</div><div class="line">        try &#123;</div><div class="line">            writeFile(JMX_CONFIG_XML, ResourceReader.getClassResourceReader(TerminalServer.class).getProperty(&quot;mbean_config.xml&quot;).getBytes());</div><div class="line">        &#125; catch (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    //</div><div class="line">    DOMConfigurator.configureAndWatch(LOGGING_CONFIG_XML);</div><div class="line">    LOGGER = Logger.getLogger(TS.class);</div><div class="line">    //</div><div class="line">    String termDirLn = System.getenv(&quot;SystemDrive&quot;) + &quot;\\.&quot; + System.getProperty(&quot;port&quot;, &quot;7788&quot;);</div><div class="line">    File tmpDirLnk = new File(termDirLn);</div><div class="line">    if (tmpDirLnk.exists() &amp;&amp; !P_GUI_ONLY) &#123;</div><div class="line">        String linkDir = getLinkDir(tmpDirLnk);</div><div class="line">        if (linkDir == null || !new File(getTargetTermDir()).equals(new File(linkDir))) &#123;</div><div class="line">            tmpDirLnk.delete();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if (!tmpDirLnk.exists()) &#123;</div><div class="line">        tmpDirLnk.delete();</div><div class="line">        ExternalProcess mklink = new ExternalProcess(&quot;cmd&quot;, &quot;/C&quot;, &quot;mklink&quot;, &quot;/J&quot;, termDirLn, getTargetTermDir());</div><div class="line">        try &#123;</div><div class="line">            mklink.run();</div><div class="line">            TERM_DIR = tmpDirLnk.exists() ? termDirLn : null;</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125; else &#123;</div><div class="line">        TERM_DIR = termDirLn;</div><div class="line">    &#125;</div><div class="line">    //</div><div class="line">    tsConfig = new TSConfig();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>要注意几个路径：</p>
<p><code>C:\ProgramData\nj4x\bin</code>目前看来只包含<code>PSUtils_x64.dll</code>文件。</p>
<p><code>C:\Users\Micheal\jfx_term</code>文件夹比较复杂，总之就是包含了jfx所有的配置文件，如图：<br><img src="http://ghost.guoxiaozhong.cn/ghost/2016-11-27-E68934AFA757E833E14A31453BA7277A.png" alt=""><br><code>chr</code>文件夹是空的，不知道干嘛的。</p>
<p><code>config</code>文件夹中，是一些配置文件，<code>logging.xml</code>是<code>log4j</code>的配置文件。配置方式都不一样，战斗民族；<code>mbean-config.xml</code>文件是网络配置文件，下次博客再讲；<code>ts_config.xml</code>文件里面就有一句话，不知道什么意思：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;</div><div class="line">&lt;!DOCTYPE properties SYSTEM &quot;http://java.sun.com/dtd/properties.dtd&quot;&gt;</div><div class="line">&lt;properties&gt;</div><div class="line">&lt;comment&gt;Properties removed at Thu Nov 17 16:28:14 CST 2016&lt;/comment&gt;</div><div class="line">&lt;/properties&gt;</div></pre></td></tr></table></figure></p>
<p><code>log</code>文件夹中是日志。</p>
<p><code>srv</code>文件夹中是各个交易商的配置文件，这个和交易商有关：<br><img src="http://ghost.guoxiaozhong.cn/ghost/2016-11-27-5C274ACCB46DC467C1F9095054644723.png" alt=""></p>
<p><code>zero_term</code>文件夹中存放着一份<code>mt4</code>的程序。没有提到的文件夹就是空的。</p>
<p><code>C:\Users\Micheal\.jfx_terminals</code>这个文件夹中存放的是mt4的程序，每一个账号，每一个交易商的不同服务器都会创建一份新的程序，应该是配置文件不同。</p>
<p>##<code>TS.scheduledExecutorService</code>分析。</p>
<p>作者在<code>Ts</code>类中定义了一个<code>scheduledExecutorService</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">     * The constant scheduledExecutorService.</div><div class="line">     */</div><div class="line">    public static ScheduledExecutorService scheduledExecutorService</div><div class="line">            = java.util.concurrent.Executors.newScheduledThreadPool(64);</div></pre></td></tr></table></figure></p>
<p>据我统计，有<strong>10</strong>个地方用到了这个<code>scheduledExecutorService</code>，也就是至少有<strong>10</strong>个定时任务。</p>
<p>1.MT4程序连接监控，监控有没有网络连接到MT4程序。这个里面有两个，不知道为什么里面还有一个，这两个任务是一样的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">if (mt4Module.isCheckRequired &amp;&amp; mt4Module.checkFuture == null) &#123;</div><div class="line">    mt4Module.checkFuture = scheduledExecutorService.schedule(new Runnable() &#123;</div><div class="line">        @Override</div><div class="line">        public void run() &#123;</div><div class="line">            Mt4Module mt4Module = incomingConnectionModule.get(tp.strategy);</div><div class="line">            if (mt4Module.isCheckRequired) &#123;</div><div class="line">                try &#123;</div><div class="line">                    String status = tp.checkTerminal(clientWorker);</div><div class="line">                    if (status.startsWith(&quot;OK&quot;)) &#123;</div><div class="line">                        mt4Module.checkFuture = scheduledExecutorService.schedule(this, 15, TimeUnit</div><div class="line">                    &#125; else &#123;</div><div class="line">                        mt4Module.checkFuture = null;</div><div class="line">                        incomingConnectionError.put(tp.strategy, status);</div><div class="line">                    &#125;</div><div class="line">                &#125; catch (NoSrvConnection e) &#123;</div><div class="line">                    String m = &quot;No connection to server: &quot; + e;</div><div class="line">                    TS.LOGGER.error(m, e);</div><div class="line">                    incomingConnectionError.put(tp.strategy, m);</div><div class="line">                &#125; catch (SrvFileNotFound e) &#123;</div><div class="line">                    String m = &quot;SRV file not found: &quot; + e;</div><div class="line">                    TS.LOGGER.error(m, e);</div><div class="line">                    incomingConnectionError.put(tp.strategy, m);</div><div class="line">                &#125; catch (MaxNumberOfTerminalsReached e) &#123;</div><div class="line">                    String m = &quot;Reached max number of terminals: &quot; + e;</div><div class="line">                    TS.LOGGER.error(m, e);</div><div class="line">                    incomingConnectionError.put(tp.strategy, m);</div><div class="line">                &#125; catch (InvalidUserNamePassword e) &#123;</div><div class="line">                    String m = &quot;Invalid user name or password: &quot; + e;</div><div class="line">                    TS.LOGGER.error(m, e);</div><div class="line">                    incomingConnectionError.put(tp.strategy, m);</div><div class="line">                &#125; catch (TerminalInstallationIsRequired e) &#123;</div><div class="line">                    String m = e.getMessage();</div><div class="line">                    TS.LOGGER.error(m, e);</div><div class="line">                    incomingConnectionError.put(tp.strategy, m);</div><div class="line">                &#125; catch (Throwable e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                    String m = &quot;Unexpected error: &quot; + e;</div><div class="line">                    TS.LOGGER.error(m, e);</div><div class="line">                    incomingConnectionError.put(tp.strategy, m);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;, 15, TimeUnit.SECONDS);</div></pre></td></tr></table></figure>
<p>2.磁盘监控，从这个就能看出对磁盘的操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//这个磁盘监控每60s进行一次6</div><div class="line">spaceMonitoringJob =    scheduledExecutorService.scheduleAtFixedRate(new Runnable() &#123;</div><div class="line">    @Override</div><div class="line">    public void run() &#123;&#125;</div><div class="line">&#125;,5, 60, TimeUnit.SECONDS);</div></pre></td></tr></table></figure>
<p>3.监控新的session</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">TS.scheduledExecutorService.submit(newSessionCreator);</div></pre></td></tr></table></figure>
<p>4.监控终端变化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">TS.scheduledExecutorService.scheduleAtFixedRate(new Runnable() &#123;</div><div class="line">    public void run() &#123;</div><div class="line">        if (Log4JUtil.isConfigured() &amp;&amp; TS.LOGGER.isTraceEnabled()) &#123;</div><div class="line">            TS.LOGGER.trace(&quot;Timer: update session&apos;s load level&quot;);</div><div class="line">        &#125;</div><div class="line">        if (TS.P_USE_MSTSC) &#123;</div><div class="line">            try &#123;</div><div class="line">                loadExistingSessions();</div><div class="line">            &#125; catch (Throwable e) &#123;</div><div class="line">                TS.LOGGER.error(&quot;Error loading current sessions&quot;, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        updateTerminals();</div><div class="line">    &#125;</div><div class="line">&#125;, 30, 60, TimeUnit.SECONDS);</div></pre></td></tr></table></figure>
<p>4.监控google网盘设置变化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">TS.scheduledExecutorService.schedule(new Runnable() &#123;</div><div class="line">    @Override</div><div class="line">    public void run() &#123;</div><div class="line">        int nextSyncInSeconds = nextSyncInSeconds();</div><div class="line">        if (nextSyncInSeconds &gt; 0) &#123;</div><div class="line">            TS.scheduledExecutorService.schedule(this, 1/*Math.min(nextSyncInSeconds, 5)*/, TimeUnit.SECONDS);</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        try &#123;</div><div class="line">            checking = true;</div><div class="line">            boolean somethingDone = false;</div><div class="line">            for (DownloadSetup ds : downloads.values()) &#123;</div><div class="line">                somethingDone |= ds.run();</div><div class="line">            &#125;</div><div class="line">            if (somethingDone) &#123;</div><div class="line">                TS.LOGGER.info(&quot;Google Drive: All Downloads Complete!&quot;);</div><div class="line">            &#125;</div><div class="line">            checking = false;</div><div class="line">        &#125; finally &#123;</div><div class="line">            lastSyncTime = System.currentTimeMillis();</div><div class="line">            TS.scheduledExecutorService.schedule(this, 1/*Math.max(nextSyncInSeconds(), 5)*/, TimeUnit.SECONDS);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>5.日志压缩任务<br><img src="http://ghost.guoxiaozhong.cn/ghost/2016-11-27-122302.jpg" alt=""><br>6.断线终端的关闭任务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ScheduledFuture schedule = TS.scheduledExecutorService.schedule(new Runnable() &#123;</div><div class="line">    public void run() &#123;</div><div class="line">        if (Log4JUtil.isConfigured() &amp;&amp; TS.LOGGER.isInfoEnabled()) &#123;</div><div class="line">            TS.LOGGER.info(&quot;Timer: Stop terminal &quot; + processName);</div><div class="line">        &#125;</div><div class="line">        ts.killProcess(processName, true);</div><div class="line">    &#125;</div><div class="line">&#125;, TS.JFX_TERM_IDLE_TMOUT_SECONDS, TimeUnit.SECONDS);</div><div class="line">TS.terminations.put(processName, schedule);</div></pre></td></tr></table></figure>
<p>7.更新终端状态任务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">TS.scheduledExecutorService.schedule(new Runnable() &#123;</div><div class="line">    public void run() &#123;</div><div class="line">        ts.updateTerminals();</div><div class="line">    &#125;</div><div class="line">&#125;, 2, TimeUnit.SECONDS);</div></pre></td></tr></table></figure>
<p>8.监控GUI中的网盘设置项变化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">TS.scheduledExecutorService.schedule(new Runnable() &#123;</div><div class="line">    @Override</div><div class="line">    public void run() &#123;</div><div class="line">        SwingUtilities.invokeLater(new Runnable() &#123;</div><div class="line">            @Override</div><div class="line">            public void run() &#123;</div><div class="line">                try &#123;</div><div class="line">                    if (!text.equals(updateInterval.getText())) &#123;</div><div class="line">                        return;</div><div class="line">                    &#125;</div><div class="line">                    if (text.replace(&quot;0&quot;, &quot;&quot;).length() &gt; 0) &#123;</div><div class="line">                        try &#123;</div><div class="line">                            if (Integer.parseInt(text) &lt;= 0) &#123;</div><div class="line">                                JOptionPane.showMessageDialog(null,</div><div class="line">                                        &quot;Error: Please enter number bigger than 0&quot;, &quot;Error Message&quot;,</div><div class="line">                                        JOptionPane.ERROR_MESSAGE);</div><div class="line">                            &#125; else &#123;</div><div class="line">                                TS.setConfigurationValue(&quot;cloud_update_interval&quot;, text);</div><div class="line">                                TS.LOGGER.info(&quot;Google Drive update interval set to &quot; + text + &quot; sec&quot;);</div><div class="line">                            &#125;</div><div class="line">                        &#125; catch (NumberFormatException e) &#123;</div><div class="line">                            JOptionPane.showMessageDialog(null,</div><div class="line">                                    &quot;Error: Please enter valid number &gt;0&quot;, &quot;Error Message&quot;,</div><div class="line">                                    JOptionPane.ERROR_MESSAGE);</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125; catch (HeadlessException e) &#123;</div><div class="line">                    TS.LOGGER.error(&quot;At GUI&quot;, e);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;, KEY_PRESSED_ACTION_DELAY, TimeUnit.MILLISECONDS);</div></pre></td></tr></table></figure>
<p>9.貌似是界面的刷新</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">TS.scheduledExecutorService.schedule(new Runnable() &#123;</div><div class="line">    @Override</div><div class="line">    public void run() &#123;</div><div class="line">        SwingUtilities.invokeLater(x);</div><div class="line">    &#125;</div><div class="line">&#125;, 1, TimeUnit.SECONDS);</div></pre></td></tr></table></figure>
<p>10.监控正在进行连接操作的终端</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">TS.scheduledExecutorService.schedule(new Runnable() &#123;</div><div class="line">    public void run() &#123;</div><div class="line">          将正在连接的终端列表下这个map</div><div class="line">        final HashMap&lt;String, TerminalParams&gt; tp = new HashMap&lt;&gt;();</div><div class="line">        synchronized (connectionsInProgress) &#123;</div><div class="line">            for (TerminalParams p : connectionsInProgress) &#123;</div><div class="line">                tp.put(p.getTerminalDirPathName(), p);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        SwingUtilities.invokeLater(new Runnable() &#123;</div><div class="line">            @Override</div><div class="line">            public void run() &#123;</div><div class="line">                try &#123;</div><div class="line">                    synchronized (connectionsInProgressTable) &#123;</div><div class="line">                        DefaultTableModel model = (DefaultTableModel) connectionsInProgressTable.getModel();</div><div class="line">                        Vector dataVector = model.getDataVector();</div><div class="line">                        int sz = dataVector.size();</div><div class="line">                        boolean allInPlace = sz &gt; 0;</div><div class="line">                        for (int row = 0; row &lt; sz; row++) &#123;</div><div class="line">                            String path = (String) model.getValueAt(row, model.findColumn(PATH_COLUMN));</div><div class="line">                            TerminalParams terminalParams = tp.get(path);</div><div class="line">                            if (terminalParams == null) &#123;</div><div class="line">                                allInPlace = false;</div><div class="line">                                break;</div><div class="line">                            &#125; else &#123;</div><div class="line">                                model.setValueAt(</div><div class="line">                                        //                                            &quot;&lt;html&gt;&lt;b&gt;&quot; + ((System.curre</div><div class="line">                                          设置连接的时间</div><div class="line">                                        new Integer((int) ((System.currentTimeMillis() - terminalParams.start.getT</div><div class="line">                                        row, model.findColumn(DURATION_COLUMN)</div><div class="line">                                );</div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                          设置好时间之后开始显示</div><div class="line">                        if (!allInPlace) &#123;</div><div class="line">                            dataVector.clear();</div><div class="line">                            // new Object[]&#123;&quot;Broker&quot;, &quot;Account&quot;, &quot;Path&quot;, &quot;Start Time&quot;, &quot;Duration (s)&quot;&#125;</div><div class="line">                            for (Map.Entry&lt;String, TerminalParams&gt; p : tp.entrySet()) &#123;</div><div class="line">                                Vector row = new Vector();</div><div class="line">                                TerminalParams terminalParams = p.getValue();</div><div class="line">                                row.add(terminalParams.getSrv());</div><div class="line">                                row.add(terminalParams.getUser());</div><div class="line">                                row.add(new SimpleDateFormat(&quot;MMM d, HH:mm:ss&quot;).format(terminalParams.start));</div><div class="line">                                row.add(</div><div class="line">                                        //&quot;&lt;html&gt;&lt;b&gt;&quot; + ((System.currentTimeMillis() - terminalParams.start.getTim</div><div class="line">                                        new Integer((int) ((System.currentTimeMillis() - terminalParams.start.getT</div><div class="line">                                );</div><div class="line">                                row.add(terminalParams.getTerminalDirPathName());</div><div class="line">                                //</div><div class="line">                                dataVector.add(row);</div><div class="line">                            &#125;</div><div class="line">                            model.fireTableDataChanged();</div><div class="line">                        &#125;</div><div class="line">                        //这个才是真真的显示</div><div class="line">                        SwingUtilities.invokeLater(new Runnable() &#123;</div><div class="line">                            @Override</div><div class="line">                            public void run() &#123;</div><div class="line">                                try &#123;</div><div class="line">                                    TitledBorder border = (TitledBorder) connectionsInProgressPanel.getBorder();</div><div class="line">                                    border.setTitle(tp.size() &gt; 0</div><div class="line">                                            ? (tp.size() == 1 ? &quot;1 Connection In Progress&quot; : &quot;&quot; + tp.size() + &quot; Co</div><div class="line">                                            : &quot;Connections In Progress&quot;</div><div class="line">                                    );</div><div class="line">                                    connectionsInProgressPanel.repaint();</div><div class="line">                                &#125; catch (Exception e) &#123;</div><div class="line">                                    TS.LOGGER.error(&quot;At GUI&quot;, e);</div><div class="line">                                &#125;</div><div class="line">                            &#125;</div><div class="line">                        &#125;);</div><div class="line">                    &#125;</div><div class="line">                &#125; catch (Exception e) &#123;</div><div class="line">                    TS.LOGGER.error(&quot;At GUI&quot;, e);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        //不知道这句话是干什么用的，为什么要this，this指的是这个new runable类，不知道加不加有什么区别</div><div class="line">        TS.scheduledExecutorService.schedule(this, 1, TimeUnit.SECONDS);</div><div class="line">    &#125;</div><div class="line">&#125;, 1, TimeUnit.SECONDS);</div></pre></td></tr></table></figure>
<p>11.监控日志显示列表的变化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">//监听日志限制输入框的输入变化</div><div class="line">TS.scheduledExecutorService.schedule(new Runnable() &#123;</div><div class="line">    @Override</div><div class="line">    public void run() &#123;</div><div class="line">        SwingUtilities.invokeLater(new Runnable() &#123;</div><div class="line">            @Override</div><div class="line">            public void run() &#123;</div><div class="line">                try &#123;</div><div class="line">                    if (!text.equals(limitRowsField.getText())) &#123;</div><div class="line">                        return;</div><div class="line">                    &#125;</div><div class="line">                    if (text.replace(&quot;0&quot;, &quot;&quot;).length() &gt; 0) &#123;</div><div class="line">                        try &#123;</div><div class="line">                            if (Integer.parseInt(text) &lt;= 0) &#123;</div><div class="line">                                JOptionPane.showMessageDialog(null,</div><div class="line">                                        &quot;Error: Please enter number bigger than 0&quot;, &quot;Error Message&quot;,</div><div class="line">                                        JOptionPane.ERROR_MESSAGE);</div><div class="line">                            &#125; else &#123;</div><div class="line">                                applyNewRowsLimit();</div><div class="line">                            &#125;</div><div class="line">                        &#125; catch (NumberFormatException e) &#123;</div><div class="line">                            JOptionPane.showMessageDialog(null,</div><div class="line">                                    &quot;Error: Please enter valid number bigger than 0&quot;, &quot;Error Message&quot;,</div><div class="line">                                    JOptionPane.ERROR_MESSAGE);</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125; catch (HeadlessException e) &#123;</div><div class="line">                    TS.LOGGER.error(&quot;At GUI&quot;, e);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;, KEY_PRESSED_ACTION_DELAY, TimeUnit.MILLISECONDS);</div></pre></td></tr></table></figure>
<p><strong>此外，还有其他的任务，后面会提到</strong></p>
]]></content>
    
    <summary type="html">
    
      NJ4X 源码源码阅读分析第二次，nj4x-ts源码分析
    
    </summary>
    
    
      <category term="NJ4X" scheme="http://blog.spartajet.com/tags/NJ4X/"/>
    
      <category term="源码分析" scheme="http://blog.spartajet.com/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>NJ4X源码阅读分析笔记系列（三）—— nj4x-ts深入分析</title>
    <link href="http://blog.spartajet.com/2017/05/20/2017-05-20-3/"/>
    <id>http://blog.spartajet.com/2017/05/20/2017-05-20-3/</id>
    <published>2017-05-20T00:00:52.000Z</published>
    <updated>2017-05-20T00:25:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NJ4X源码阅读分析笔记系列（三）——-nj4x-ts深入分析"><a href="#NJ4X源码阅读分析笔记系列（三）——-nj4x-ts深入分析" class="headerlink" title="NJ4X源码阅读分析笔记系列（三）—— nj4x-ts深入分析"></a>NJ4X源码阅读分析笔记系列（三）—— nj4x-ts深入分析</h1><h2 id="一、系统的工作流程图（模块级）"><a href="#一、系统的工作流程图（模块级）" class="headerlink" title="一、系统的工作流程图（模块级）"></a>一、系统的工作流程图（模块级）</h2><p><img src="http://ghost.guoxiaozhong.cn/ghost/2016-12-18-043426.jpg" alt=""><br>其工作流程如下（以行情获取为例）：</p>
<ol>
<li>应用端向Application Server发起连接</li>
<li>应用服务器调用jfx模块</li>
<li>jfx模块与NJ4X Server中的nj4x-ts连接</li>
<li>nj4x-ts调用mt4if模块</li>
<li>mt4if模块与Application Server建立连接</li>
<li>Application Server模块发起数据请求（行情，交易，订单等等）</li>
<li>mt4if模块向MT4 Terminal请求数据</li>
<li>MT4 Terminal向交易商节点请求数据</li>
<li>交易商节点发送消息给MT4 Terminal</li>
<li>MT4 Terminal将消息发送到mt4if</li>
<li>mt4if将消息发送到Application Server的jfx中</li>
<li>jfx将消息发送到server中</li>
<li>server把数据发送到client中</li>
</ol>
<h2 id="二、NJ4X各个模块的作用"><a href="#二、NJ4X各个模块的作用" class="headerlink" title="二、NJ4X各个模块的作用"></a>二、NJ4X各个模块的作用</h2><p>这个是对之前分析的补充和纠正</p>
<h3 id="1-mt4if"><a href="#1-mt4if" class="headerlink" title="1. mt4if"></a>1. mt4if</h3><p>这个是C++开发的模块主要作用如下：</p>
<ul>
<li>通讯连接（两种方式：一种是调用jvm，另一种是直接用UDP的Socket，目前是用jvm）</li>
<li>Candle运算，系统默认的是1s,1min,5min,30min,其他的是根据需求计算的</li>
<li>mt4 terminal的代理模块</li>
<li>多线程的处理（稳定性）</li>
</ul>
<h3 id="2-nj4x-ts"><a href="#2-nj4x-ts" class="headerlink" title="2. nj4x-ts"></a>2. nj4x-ts</h3><p>这个是NJ4X终端服务器的java部分，作用如下：</p>
<ul>
<li>与Application Server通讯</li>
<li>与mt4if交互，给mt4if发指令</li>
<li>操作界面</li>
<li>日志，存储等</li>
</ul>
<h3 id="3-jfx"><a href="#3-jfx" class="headerlink" title="3. jfx"></a>3. jfx</h3><p>这个模块是Application Server的组成部分，作用如下：</p>
<ul>
<li>与nj4x-ts交互</li>
<li>与mt4if交互</li>
<li>对MT4交易方式的封装</li>
<li>对行情等信息的封装</li>
</ul>
<h3 id="4-ea"><a href="#4-ea" class="headerlink" title="4. ea"></a>4. ea</h3><p>这个是Expert Advisor模块，这个模块中只有两个文件，<code>jfx.mq4</code>和<code>wnds.mq4</code>，根据MQ4官网的说法，所有的交易策略和逻辑都是以.mq4文件形式存在的。MQ4确实有专家系统，但是貌似和这个关系不大。</p>
<h3 id="5-zero-term"><a href="#5-zero-term" class="headerlink" title="5. zero-term"></a>5. zero-term</h3><p>这个模块存储着mt4 terminal的各种配置文件，根据货币，交易商的不同来给mt4 terminal生成不同的配置文件。</p>
<h2 id="三-系统和MT4的交互方式"><a href="#三-系统和MT4的交互方式" class="headerlink" title="三 系统和MT4的交互方式"></a>三 系统和MT4的交互方式</h2><p>系统和MT4程序的交互主要是通过mt4if这个C++库的。mt4if这个模块提供了MT4程序的代理。体现在<code>ea</code>模块的<code>jfx.mq4</code>文件中.</p>
<p>其中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#import &quot;mt45if.dll&quot;</div><div class="line">string  jfxConnect(string, int, string, int, string);</div><div class="line">void    jfxDisconnect(string&amp;);</div><div class="line">int     jfxGetCommand(string&amp;, string&amp; p1, string&amp; p2, string&amp; p3, string&amp; p4, string&amp; p5, string&amp; p6, string&amp; p7, string&amp; p8, string&amp; p9, string&amp; p10, string&amp; p11, string&amp; p12, string&amp; p13, string&amp; p14, string&amp; p15);</div><div class="line">void    jfxSendResult(string&amp;, string&amp;);</div><div class="line">void    jfxLog(string&amp;);</div><div class="line">void    jfxHWnd(int, bool);</div><div class="line">void    jfxPositionInit(string&amp;, int);</div><div class="line">int     jfxPositionOrderInfo(string&amp;, int, int, int, int, int, int, int, string&amp;, string&amp;, double, double, double, double, double, double, double, double);</div><div class="line">string  jfxPositionRes(string&amp;, int, int);</div><div class="line">int     jfxMqlRatesInit(string&amp;);</div><div class="line">int     jfxMqlRatesAdd(string&amp;, MqlRates&amp; rates);</div><div class="line">string  jfxMqlRatesRes(string&amp;);</div><div class="line">#import</div></pre></td></tr></table></figure>
<p>定义了调用mt4if的函数，这些函数帮助mt4 terminal与外界通讯。</p>
<p>其中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">switch (x) &#123;</div><div class="line">    0:</div><div class="line">                    res = IntegerToString(iBars(args0,StrToInteger(args1)));</div><div class="line">                    if (maxDebug) Print(&quot;iBars&quot;, &quot;, &quot;, &quot;symbol=&quot;, args0,&quot;, &quot;, &quot;timeframe=&quot;, args1);</div><div class="line">                    break;</div><div class="line">    1:</div><div class="line">                    res = IntegerToString( iBarShift(args0,StrToInteger(args1),StrToTime(args2),StrToInteger(args3)) );</div><div class="line">                    if (maxDebug) Print(&quot;iBarShift&quot;, &quot;, &quot;, &quot;symbol=&quot;, args0,&quot;, &quot;, &quot;timeframe=&quot;, args1,&quot;, &quot;, &quot;time=&quot;, args2,&quot;, &quot;, &quot;exact=&quot;, args3);</div><div class="line">                    break;</div><div class="line">    2:</div><div class="line">                    res = DoubleToString( iClose(args0,StrToInteger(args1),StrToInteger(args2)) );</div><div class="line">                    if (maxDebug) Print(&quot;iClose&quot;, &quot;, &quot;, &quot;symbol=&quot;, args0,&quot;, &quot;, &quot;timeframe=&quot;, args1,&quot;, &quot;, &quot;shift=&quot;, args2);</div><div class="line">                    break;</div><div class="line">    3:</div><div class="line">                    res = DoubleToString( iHigh(args0,StrToInteger(args1),StrToInteger(args2)) );</div><div class="line">                    if (maxDebug) Print(&quot;iHigh&quot;, &quot;, &quot;, &quot;symbol=&quot;, args0,&quot;, &quot;, &quot;timeframe=&quot;, args1,&quot;, &quot;, &quot;shift=&quot;, args2);</div><div class="line">                    break;</div></pre></td></tr></table></figure>
<p>以上代码就是判断通讯协议并作出不同的动作的代码</p>
<p>可以修改jfx.mq4来调整自己的策略。</p>
<h2 id="4-MT4-TERMINAL与外界的通讯协议"><a href="#4-MT4-TERMINAL与外界的通讯协议" class="headerlink" title="4. MT4 TERMINAL与外界的通讯协议"></a>4. MT4 TERMINAL与外界的通讯协议</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div></pre></td><td class="code"><pre><div class="line">0:&quot;iBars&quot;;</div><div class="line">1:&quot;iBarShift&quot;;</div><div class="line">2:&quot;iClose&quot;;</div><div class="line">3:&quot;iHigh&quot;;</div><div class="line">4:&quot;iLow&quot;;</div><div class="line">5:&quot;iOpen&quot;;</div><div class="line">6:&quot;iVolume&quot;;</div><div class="line">7:&quot;iTime&quot;;</div><div class="line">8:&quot;iLowest&quot;;</div><div class="line">9:&quot;iHighest&quot;;</div><div class="line">10:&quot;AccountBalance&quot;;</div><div class="line">11:&quot;AccountCredit&quot;;</div><div class="line">12:&quot;AccountCompany&quot;;</div><div class="line">13:&quot;AccountCurrency&quot;;</div><div class="line">14:&quot;AccountEquity&quot;;</div><div class="line">15:&quot;AccountFreeMargin&quot;;</div><div class="line">16:&quot;AccountMargin&quot;;</div><div class="line">17:&quot;AccountName&quot;;</div><div class="line">18:&quot;AccountNumber&quot;;</div><div class="line">19:&quot;AccountProfit&quot;;</div><div class="line">20:&quot;GetLastError&quot;;</div><div class="line">21:&quot;IsConnected&quot;;</div><div class="line">22:&quot;IsDemo&quot;;</div><div class="line">23:&quot;IsTesting&quot;;</div><div class="line">24:&quot;IsVisualMode&quot;;</div><div class="line">25:&quot;GetTickCount&quot;;</div><div class="line">26:&quot;Comment&quot;;</div><div class="line">27:&quot;MarketInfo&quot;;</div><div class="line">28:&quot;Print&quot;;</div><div class="line">29:&quot;Day&quot;;</div><div class="line">30:&quot;DayOfWeek&quot;;</div><div class="line">31:&quot;DayOfYear&quot;;</div><div class="line">32:&quot;Hour&quot;;</div><div class="line">33:&quot;Minute&quot;;</div><div class="line">34:&quot;Month&quot;;</div><div class="line">35:&quot;Seconds&quot;;</div><div class="line">36:&quot;TimeCurrent&quot;;</div><div class="line">37:&quot;Year&quot;;</div><div class="line">38:&quot;ObjectCreate&quot;;</div><div class="line">39:&quot;ObjectCreate&quot;;</div><div class="line">40:&quot;ObjectCreate&quot;;</div><div class="line">41:&quot;ObjectDelete&quot;;</div><div class="line">42:&quot;ObjectGet&quot;;</div><div class="line">43:&quot;ObjectSet&quot;;</div><div class="line">44:&quot;ObjectGetFiboDescription&quot;;</div><div class="line">45:&quot;ObjectSetFiboDescription&quot;;</div><div class="line">46:&quot;ObjectSetText&quot;;</div><div class="line">47:&quot;ObjectsTotal&quot;;</div><div class="line">48:&quot;ObjectType&quot;;</div><div class="line">49:&quot;iAC&quot;;</div><div class="line">50:&quot;iAD&quot;;</div><div class="line">51:&quot;iAlligator&quot;;</div><div class="line">52:&quot;iADX&quot;;</div><div class="line">53:&quot;iATR&quot;;</div><div class="line">54:&quot;iAO&quot;;</div><div class="line">55:&quot;iBearsPower&quot;;</div><div class="line">56:&quot;iBands&quot;;</div><div class="line">57:&quot;iBullsPower&quot;;</div><div class="line">58:&quot;iCCI&quot;;</div><div class="line">59:&quot;iCustom&quot;;</div><div class="line">60:&quot;iDeMarker&quot;;</div><div class="line">61:&quot;iEnvelopes&quot;;</div><div class="line">62:&quot;iForce&quot;;</div><div class="line">63:&quot;iFractals&quot;;</div><div class="line">64:&quot;iGator&quot;;</div><div class="line">65:&quot;iBWMFI&quot;;</div><div class="line">66:&quot;iMomentum&quot;;</div><div class="line">67:&quot;iMFI&quot;;</div><div class="line">68:&quot;iMA&quot;;</div><div class="line">69:&quot;iOsMA&quot;;</div><div class="line">70:&quot;iMACD&quot;;</div><div class="line">71:&quot;iOBV&quot;;</div><div class="line">72:&quot;iSAR&quot;;</div><div class="line">73:&quot;iRSI&quot;;</div><div class="line">74:&quot;iRVI&quot;;</div><div class="line">75:&quot;iStdDev&quot;;</div><div class="line">76:&quot;iStochastic&quot;;</div><div class="line">77:&quot;iWPR&quot;;</div><div class="line">78:&quot;OrderClose&quot;;</div><div class="line">79:&quot;OrderCloseBy&quot;;</div><div class="line">80:&quot;OrderClosePrice&quot;;</div><div class="line">81:&quot;OrderCloseTime&quot;;</div><div class="line">82:&quot;OrderComment&quot;;</div><div class="line">83:&quot;OrderCommission&quot;;</div><div class="line">84:&quot;OrderDelete&quot;;</div><div class="line">85:&quot;OrderExpiration&quot;;</div><div class="line">86:&quot;OrderLots&quot;;</div><div class="line">87:&quot;OrderMagicNumber&quot;;</div><div class="line">88:&quot;OrderModify&quot;;</div><div class="line">89:&quot;OrderOpenPrice&quot;;</div><div class="line">90:&quot;OrderOpenTime&quot;;</div><div class="line">91:&quot;OrderPrint&quot;;</div><div class="line">92:&quot;OrderProfit&quot;;</div><div class="line">93:&quot;OrderSelect&quot;;</div><div class="line">94:&quot;OrderSend&quot;;</div><div class="line">95:&quot;OrdersHistoryTotal&quot;;</div><div class="line">96:&quot;OrderStopLoss&quot;;</div><div class="line">97:&quot;OrdersTotal&quot;;</div><div class="line">98:&quot;OrderSwap&quot;;</div><div class="line">99:&quot;OrderSymbol&quot;;</div><div class="line">100:&quot;OrderTakeProfit&quot;;</div><div class="line">101:&quot;OrderTicket&quot;;</div><div class="line">102:&quot;OrderType&quot;;</div><div class="line">103:&quot;IsTradeContextBusy&quot;;</div><div class="line">104:&quot;RefreshRates&quot;;</div><div class="line">105:&quot;AccountStopoutLevel&quot;;</div><div class="line">106:&quot;AccountStopoutMode&quot;;</div><div class="line">107:&quot;MessageBox&quot;;</div><div class="line">108:&quot;UninitializeReason&quot;;</div><div class="line">109:&quot;IsTradeAllowed&quot;;</div><div class="line">110:&quot;IsStopped&quot;;</div><div class="line">111:&quot;IsOptimization&quot;;</div><div class="line">112:&quot;IsLibrariesAllowed&quot;;</div><div class="line">113:&quot;IsDllsAllowed&quot;;</div><div class="line">114:&quot;IsExpertEnabled&quot;;</div><div class="line">115:&quot;AccountFreeMarginCheck&quot;;</div><div class="line">116:&quot;AccountFreeMarginMode&quot;;</div><div class="line">117:&quot;AccountLeverage&quot;;</div><div class="line">118:&quot;AccountServer&quot;;</div><div class="line">119:&quot;TerminalCompany&quot;;</div><div class="line">120:&quot;TerminalName&quot;;</div><div class="line">121:&quot;TerminalPath&quot;;</div><div class="line">122:&quot;Alert&quot;;</div><div class="line">123:&quot;PlaySound&quot;;</div><div class="line">124:&quot;ObjectDescription&quot;;</div><div class="line">125:&quot;ObjectFind&quot;;</div><div class="line">126:&quot;ObjectGetShiftByValue&quot;;</div><div class="line">127:&quot;ObjectGetValueByShift&quot;;</div><div class="line">128:&quot;ObjectMove&quot;;</div><div class="line">129:&quot;ObjectName&quot;;</div><div class="line">130:&quot;ObjectsDeleteAll&quot;;</div><div class="line">131:&quot;iIchimoku&quot;;</div><div class="line">132:&quot;HideTestIndicators&quot;;</div><div class="line">133:&quot;Period&quot;;</div><div class="line">134:&quot;Symbol&quot;;</div><div class="line">135:&quot;WindowBarsPerChart&quot;;</div><div class="line">136:&quot;WindowFirstVisibleBar&quot;;</div><div class="line">137:&quot;WindowExpertName&quot;;</div><div class="line">138:&quot;WindowFind&quot;;</div><div class="line">139:&quot;WindowIsVisible&quot;;</div><div class="line">140:&quot;WindowPriceMax&quot;;</div><div class="line">141:&quot;WindowPriceMin&quot;;</div><div class="line">142:&quot;WindowOnDropped&quot;;</div><div class="line">143:&quot;WindowXOnDropped&quot;;</div><div class="line">144:&quot;WindowYOnDropped&quot;;</div><div class="line">145:&quot;WindowPriceOnDropped&quot;;</div><div class="line">146:&quot;WindowTimeOnDropped&quot;;</div><div class="line">147:&quot;WindowsTotal&quot;;</div><div class="line">148:&quot;WindowRedraw&quot;;</div><div class="line">149:&quot;WindowScreenShot&quot;;</div><div class="line">150:&quot;WindowHandle&quot;;</div><div class="line">151:&quot;GlobalVariableCheck&quot;;</div><div class="line">152:&quot;GlobalVariableDel&quot;;</div><div class="line">153:&quot;GlobalVariableGet&quot;;</div><div class="line">154:&quot;GlobalVariableName&quot;;</div><div class="line">155:&quot;GlobalVariableSet&quot;;</div><div class="line">156:&quot;GlobalVariableSetOnCondition&quot;;</div><div class="line">157:&quot;GlobalVariablesDeleteAll&quot;;</div><div class="line">158:&quot;GlobalVariablesTotal&quot;;</div><div class="line">159:&quot;SymbolsTotal&quot;;</div><div class="line">160:&quot;SymbolName&quot;;</div><div class="line">161:&quot;SymbolSelect&quot;;</div><div class="line">162:&quot;TerminalClose&quot;;</div><div class="line">163:&quot;SymbolInfo&quot;;</div><div class="line">164:&quot;AccountInfo&quot;;</div><div class="line">165:&quot;serverTimeGMTOffset&quot;;</div><div class="line">166:&quot;IsTradeAllowed&quot;;</div><div class="line">10000:&quot;SetAutoRefresh&quot;;</div><div class="line">10001:&quot;MarketInfoAll&quot;;</div><div class="line">10002:&quot;NewTick&quot;;</div><div class="line">10012:&quot;TicksListenerAll&quot;;</div><div class="line">10003:&quot;OrderGet&quot;;</div><div class="line">10004:&quot;NewPosition&quot;;</div><div class="line">10005:&quot;OrderGetAll&quot;;</div></pre></td></tr></table></figure>
<p>这些协议大部分是mq4语言中的方法名，根据这些方法名就可以执行相应的方法，后面还有参数。</p>
<p>有意思的是，为了解决这些方法的参数不同的问题，接收指令函数的参数有15个，应该是最长的那个函数的参数长度。如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jfxGetCommand(string&amp;, string&amp; p1, string&amp; p2, string&amp; p3, string&amp; p4, string&amp; p5, string&amp; p6, string&amp; p7, string&amp; p8, string&amp; p9, string&amp; p10, string&amp; p11, string&amp; p12, string&amp; p13, string&amp; p14, string&amp; p15);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      NJ4X 源码源码阅读分析第三次，nj4x-ts源码深入分析
    
    </summary>
    
    
      <category term="NJ4X" scheme="http://blog.spartajet.com/tags/NJ4X/"/>
    
      <category term="源码分析" scheme="http://blog.spartajet.com/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 最全小白实战教程之一 （安装篇）</title>
    <link href="http://blog.spartajet.com/2017/05/20/nginx-doc-01/"/>
    <id>http://blog.spartajet.com/2017/05/20/nginx-doc-01/</id>
    <published>2017-05-19T23:55:07.000Z</published>
    <updated>2017-05-19T23:56:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h2><ol>
<li>操作系统：Centos6.4 64位</li>
<li>Nginx版本：1.4.2</li>
</ol>
<h2 id="二、安装Nginx"><a href="#二、安装Nginx" class="headerlink" title="二、安装Nginx"></a>二、安装Nginx</h2><h4 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost nginx]# cd /usr/local/</div><div class="line">[root@localhost nginx]# mkdir nginx</div><div class="line">[root@localhost nginx]# cd nginx</div><div class="line">[root@localhost nginx]# wget http://nginx.org/download/nginx-1.4.2.tar.gz</div></pre></td></tr></table></figure>
<h4 id="2-解压"><a href="#2-解压" class="headerlink" title="2.解压"></a>2.解压</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost nginx]# tar xf nginx-1.4.2.tar.gz</div></pre></td></tr></table></figure>
<h4 id="3-新建Nginx用户与组"><a href="#3-新建Nginx用户与组" class="headerlink" title="3.新建Nginx用户与组"></a>3.新建Nginx用户与组</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost nginx]# groupadd -g 108 -r nginx</div><div class="line">You have new mail in /var/spool/mail/root</div><div class="line">[root@localhost nginx]# useradd -u 108 -r -g 108 nginx</div><div class="line">[root@localhost nginx]# id nginx</div><div class="line">uid=108(nginx) gid=108(nginx) 组=108(nginx)</div></pre></td></tr></table></figure>
<h4 id="4-编译配置文件"><a href="#4-编译配置文件" class="headerlink" title="4.编译配置文件"></a>4.编译配置文件</h4><p>安装prce(重定向支持)和openssl(https支持，如果不需要https可以不安装。)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@localhost nginx]# yum install -y pcre-devel openssl-devel</div><div class="line">[root@localhost nginx]# cd  nginx-1.4.2</div><div class="line">[root@localhost nginx-1.4.2]# ./configure  \</div><div class="line">--prefix=/usr  \</div><div class="line">--sbin-path=/usr/sbin/nginx  \</div><div class="line">--conf-path=/etc/nginx/nginx.conf  \</div><div class="line">--error-log-path=/var/log/nginx/error.log  \</div><div class="line">--http-log-path=/var/log/nginx/access.log  \</div><div class="line">--pid-path=/var/run/nginx/nginx.pid  \</div><div class="line">--lock-path=/var/lock/nginx.lock \</div><div class="line">--user=nginx \</div><div class="line">--group=nginx \</div><div class="line">--with-http_ssl_module \</div><div class="line">--with-http_flv_module \</div><div class="line">--with-http_stub_status_module \</div><div class="line">--with-http_gzip_static_module \</div><div class="line">--http-client-body-temp-path=/var/tmp/nginx/client/ \</div><div class="line">--http-proxy-temp-path=/var/tmp/nginx/proxy/ \</div><div class="line">--http-fastcgi-temp-path=/var/tmp/nginx/fcgi/ \</div><div class="line">--http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \</div><div class="line">--http-scgi-temp-path=/var/tmp/nginx/scgi \</div><div class="line">--with-pcre</div></pre></td></tr></table></figure>
<h4 id="5-编译并安装"><a href="#5-编译并安装" class="headerlink" title="5.编译并安装"></a>5.编译并安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost nginx-1.4.2]# make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h4 id="6-初始化脚本"><a href="#6-初始化脚本" class="headerlink" title="6.初始化脚本"></a>6.初始化脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost nginx]# vi /etc/init.d/nginx</div></pre></td></tr></table></figure>
<p>脚本一定要写成这样，否则会出错的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line">#</div><div class="line"># nginx        Startup script for nginx</div><div class="line">#</div><div class="line"># chkconfig: - 85 15</div><div class="line"># processname: nginx</div><div class="line"># config: /etc/nginx/nginx.conf</div><div class="line"># config: /etc/sysconfig/nginx</div><div class="line"># pidfile: /var/run/nginx.pid</div><div class="line"># description: nginx is an HTTP and reverse proxy server</div><div class="line">#</div><div class="line">### BEGIN INIT INFO</div><div class="line"># Provides: nginx</div><div class="line"># Required-Start: $local_fs $remote_fs $network</div><div class="line"># Required-Stop: $local_fs $remote_fs $network</div><div class="line"># Default-Start: 2 3 4 5</div><div class="line"># Default-Stop: 0 1 6</div><div class="line"># Short-Description: start and stop nginx</div><div class="line">### END INIT INFO</div><div class="line"></div><div class="line"># Source function library.</div><div class="line">. /etc/rc.d/init.d/functions</div><div class="line"></div><div class="line">if [ -L $0 ]; then</div><div class="line">    initscript=`/bin/readlink -f $0`</div><div class="line">else</div><div class="line">    initscript=$0</div><div class="line">fi</div><div class="line"></div><div class="line">sysconfig=`/bin/basename $initscript`</div><div class="line"></div><div class="line">if [ -f /etc/sysconfig/$sysconfig ]; then</div><div class="line">    . /etc/sysconfig/$sysconfig</div><div class="line">fi</div><div class="line"></div><div class="line">nginx=$&#123;NGINX-/usr/sbin/nginx&#125;</div><div class="line">prog=`/bin/basename $nginx`</div><div class="line">conffile=$&#123;CONFFILE-/etc/nginx/nginx.conf&#125;</div><div class="line">lockfile=$&#123;LOCKFILE-/var/lock/subsys/nginx&#125;</div><div class="line">pidfile=$&#123;PIDFILE-/var/run/nginx.pid&#125;</div><div class="line">SLEEPMSEC=$&#123;SLEEPMSEC-200000&#125;</div><div class="line">UPGRADEWAITLOOPS=$&#123;UPGRADEWAITLOOPS-5&#125;</div><div class="line">RETVAL=0</div><div class="line"></div><div class="line">start() &#123;</div><div class="line">    echo -n $&quot;Starting $prog: &quot;</div><div class="line"></div><div class="line">    daemon --pidfile=$&#123;pidfile&#125; $&#123;nginx&#125; -c $&#123;conffile&#125;</div><div class="line">    RETVAL=$?</div><div class="line">    echo</div><div class="line">    [ $RETVAL = 0 ] &amp;&amp; touch $&#123;lockfile&#125;</div><div class="line">    return $RETVAL</div><div class="line">&#125;</div><div class="line"></div><div class="line">stop() &#123;</div><div class="line">    echo -n $&quot;Stopping $prog: &quot;</div><div class="line">    killproc -p $&#123;pidfile&#125; $&#123;prog&#125;</div><div class="line">    RETVAL=$?</div><div class="line">    echo</div><div class="line">    [ $RETVAL = 0 ] &amp;&amp; rm -f $&#123;lockfile&#125; $&#123;pidfile&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">reload() &#123;</div><div class="line">    echo -n $&quot;Reloading $prog: &quot;</div><div class="line">    killproc -p $&#123;pidfile&#125; $&#123;prog&#125; -HUP</div><div class="line">    RETVAL=$?</div><div class="line">    echo</div><div class="line">&#125;</div><div class="line"></div><div class="line">upgrade() &#123;</div><div class="line">    oldbinpidfile=$&#123;pidfile&#125;.oldbin</div><div class="line"></div><div class="line">    configtest -q || return</div><div class="line">    echo -n $&quot;Starting new master $prog: &quot;</div><div class="line">    killproc -p $&#123;pidfile&#125; $&#123;prog&#125; -USR2</div><div class="line">    echo</div><div class="line"></div><div class="line">    for i in `/usr/bin/seq $UPGRADEWAITLOOPS`; do</div><div class="line">        /bin/usleep $SLEEPMSEC</div><div class="line">        if [ -f $&#123;oldbinpidfile&#125; -a -f $&#123;pidfile&#125; ]; then</div><div class="line">            echo -n $&quot;Graceful shutdown of old $prog: &quot;</div><div class="line">            killproc -p $&#123;oldbinpidfile&#125; $&#123;prog&#125; -QUIT</div><div class="line">            RETVAL=$?</div><div class="line">            echo</div><div class="line">            return</div><div class="line">        fi</div><div class="line">    done</div><div class="line"></div><div class="line">    echo $&quot;Upgrade failed!&quot;</div><div class="line">    RETVAL=1</div><div class="line">&#125;</div><div class="line"></div><div class="line">configtest() &#123;</div><div class="line">    if [ &quot;$#&quot; -ne 0 ] ; then</div><div class="line">        case &quot;$1&quot; in</div><div class="line">            -q)</div><div class="line">                FLAG=$1</div><div class="line">                ;;</div><div class="line">            *)</div><div class="line">                ;;</div><div class="line">        esac</div><div class="line">        shift</div><div class="line">    fi</div><div class="line">    $&#123;nginx&#125; -t -c $&#123;conffile&#125; $FLAG</div><div class="line">    RETVAL=$?</div><div class="line">    return $RETVAL</div><div class="line">&#125;</div><div class="line"></div><div class="line">rh_status() &#123;</div><div class="line">    status -p $&#123;pidfile&#125; -b $&#123;nginx&#125; $&#123;nginx&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"># See how we were called.</div><div class="line">case &quot;$1&quot; in</div><div class="line">    start)</div><div class="line">        rh_status &gt;/dev/null 2&gt;&amp;1 &amp;&amp; exit 0</div><div class="line">        start</div><div class="line">        ;;</div><div class="line">    stop)</div><div class="line">        stop</div><div class="line">        ;;</div><div class="line">    status)</div><div class="line">        rh_status</div><div class="line">        RETVAL=$?</div><div class="line">        ;;</div><div class="line">    restart)</div><div class="line">        configtest -q || exit $RETVAL</div><div class="line">        stop</div><div class="line">        start</div><div class="line">        ;;</div><div class="line">    upgrade)</div><div class="line">        rh_status &gt;/dev/null 2&gt;&amp;1 || exit 0</div><div class="line">        upgrade</div><div class="line">        ;;</div><div class="line">    condrestart|try-restart)</div><div class="line">        if rh_status &gt;/dev/null 2&gt;&amp;1; then</div><div class="line">            stop</div><div class="line">            start</div><div class="line">        fi</div><div class="line">        ;;</div><div class="line">    force-reload|reload)</div><div class="line">        reload</div><div class="line">        ;;</div><div class="line">    configtest)</div><div class="line">        configtest</div><div class="line">        ;;</div><div class="line">    *)</div><div class="line">        echo $&quot;Usage: $prog &#123;start|stop|restart|condrestart|try-restart|force-reload|upgrade|reload|status|help|configtest&#125;&quot;</div><div class="line">        RETVAL=2</div><div class="line">esac</div><div class="line"></div><div class="line">exit $RETVAL</div></pre></td></tr></table></figure>
<p>脚本处理：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost init.d]# chmod +x nginx</div><div class="line">[root@localhost init.d]# chkconfig --add nginx</div><div class="line">[root@localhost init.d]# chkconfig nginx on</div><div class="line">[root@localhost init.d]# service nginx start</div></pre></td></tr></table></figure>
<p>然后访问：<br><img src="http://ghost.guoxiaozhong.cn/ghost/2017-01-02-145323.jpg" alt=""></p>
<h2 id="三、yum安装nginx"><a href="#三、yum安装nginx" class="headerlink" title="三、yum安装nginx"></a>三、yum安装nginx</h2><p><strong>推荐使用这种方法，上一种方法折腾了一晚上呢</strong>，之后的教程以此方法为主</p>
<h4 id="1-增加Nginx仓储地址"><a href="#1-增加Nginx仓储地址" class="headerlink" title="1.增加Nginx仓储地址"></a>1.增加Nginx仓储地址</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# vi /etc/yum.repos.d/nginx.repo</div></pre></td></tr></table></figure>
<p>在文件中写入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[nginx] </div><div class="line">name=nginx repo  </div><div class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/  </div><div class="line">gpgcheck=0  </div><div class="line">enabled=1</div></pre></td></tr></table></figure>
<p>然后</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# sudo yum install nginx -y </div><div class="line">[root@localhost ~]# sudo service nginx start</div><div class="line">[root@localhost ~]# sudo chkconfig nginx on</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      介绍 Nginx 的两种安装方法和简单实用
    
    </summary>
    
    
      <category term="Nginx" scheme="http://blog.spartajet.com/tags/Nginx/"/>
    
      <category term="教程" scheme="http://blog.spartajet.com/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="安装" scheme="http://blog.spartajet.com/tags/%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>springboot+sharding-jdbc+mybatis+mysql全注解实现增量数据库分片实现</title>
    <link href="http://blog.spartajet.com/2017/05/20/spring-boot-sharding-jdbc/"/>
    <id>http://blog.spartajet.com/2017/05/20/spring-boot-sharding-jdbc/</id>
    <published>2017-05-19T23:44:04.000Z</published>
    <updated>2017-05-19T23:51:57.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>项目中遇到了分库分表的问题，找到了shrding-jdbc，于是就搞了一个springboot+sharding-jdbc+mybatis的增量分片的应用。今天写博客总结一下遇到的坑。</p>
<p>其实，我自己写了一个increament-jdbc组件的，当我读了sharding-jdbc的源码之后，发现思路和原理差不多，sharding这个各方面要比我的强，毕竟我是一天之内赶出来的东东。</p>
<p>示例代码地址:<a href="http://git.oschina.net/qcwz/springboot-sharding-jdbc-demo" target="_blank" rel="external">http://git.oschina.net/qcwz/springboot-sharding-jdbc-demo</a></p>
<p>demo没有写日志，也没有各种异常判断，只是说明问题</p>
</blockquote>
<h2 id="一、需求背景"><a href="#一、需求背景" class="headerlink" title="一、需求背景"></a>一、需求背景</h2><p>我的项目背景就不说了，现在举一个例子吧：A,B两支股票都在上海，深圳上市，需要实时记录这两支股票的交易tick(不懂tick也没有关系)。现在的分片策略是：上海、深圳分别建库，每个库都存各自交易所的两支股票的ticktick，且按照月分表。如图：</p>
<ul>
<li>db_sh<ul>
<li>tick_a_2017_01</li>
<li>tick_b_2017_01</li>
<li>……..</li>
<li>tick_a_2017_12</li>
<li>tick_b_2017_12</li>
</ul>
</li>
<li><p>db_sz</p>
<ul>
<li><p>tick_a_2017_01</p>
<ul>
<li>tick_b_2017_01</li>
<li>……..</li>
<li>tick_a_2017_12</li>
<li>tick_b_2017_12</li>
</ul>
<p>分库分表就是这样的。根据这个建库。</p>
<p><strong>千万不要讨论这样分库分表是否合适，这里这样分片只是举个栗子，说明分库分表这个事情。</strong></p>
<p><strong>Sharding-jdbc是不支持建库的SQL，如果像我这样增量的数据库和数据表，那就要一次性把一段时期的数据库和数据表都要建好。</strong></p>
</li>
</ul>
</li>
</ul>
<h2 id="二、建库"><a href="#二、建库" class="headerlink" title="二、建库"></a>二、建库</h2><p>考虑到表确实多，所以我就只建1，2月份的表。语句见demo文件。</p>
<h2 id="三、springboot集成sharding-jdbc"><a href="#三、springboot集成sharding-jdbc" class="headerlink" title="三、springboot集成sharding-jdbc"></a>三、springboot集成sharding-jdbc</h2><p>mvn配置pom如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.spartajet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-sharding-jdbc-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-sharding-jdbc-demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>Springboot integrate Sharding-jdbc Demo<span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">project.build.locales</span>&gt;</span>zh_CN<span class="tag">&lt;/<span class="name">project.build.locales</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">project.build.jdk</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">project.build.jdk</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">spring.boot.version</span>&gt;</span>1.4.1.RELEASE<span class="tag">&lt;/<span class="name">spring.boot.version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">com.alibaba.druid.version</span>&gt;</span>1.0.13<span class="tag">&lt;/<span class="name">com.alibaba.druid.version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">mysql-connector-java.version</span>&gt;</span>5.1.36<span class="tag">&lt;/<span class="name">mysql-connector-java.version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">sharding-jdbc.version</span>&gt;</span>1.4.1<span class="tag">&lt;/<span class="name">sharding-jdbc.version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">com.google.code.gson.version</span>&gt;</span>2.8.0<span class="tag">&lt;/<span class="name">com.google.code.gson.version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">joda-trade.version</span>&gt;</span>2.9.7<span class="tag">&lt;/<span class="name">joda-trade.version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">commons-dbcp.version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">commons-dbcp.version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">commons-io.version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">commons-io.version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">mybatis-spring-boot-starter.version</span>&gt;</span>1.2.0<span class="tag">&lt;/<span class="name">mybatis-spring-boot-starter.version</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-spring-boot-starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbcp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbcp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-dbcp.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.dangdang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding-jdbc-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;sharding-jdbc.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.dangdang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding-jdbc-config-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;sharding-jdbc.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.dangdang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding-jdbc-self-id-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;sharding-jdbc.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;com.google.code.gson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>spring-boot-start-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-log4j2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>spring-boot-start-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql-connector-java.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;project.build.jdk&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;project.build.jdk&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="name">encoding</span>&gt;</span>$&#123;project.build.sourceEncoding&#125;<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></div><div class="line">				<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></div></pre></td></tr></table></figure>
<p>其实这个和sharding-jdbc的官网差不多。其实我想写一个<code>sharding-jdbc-spring-boot-starter</code>的pom的，等项目业务都做完再说吧。</p>
<h2 id="四、配置数据源"><a href="#四、配置数据源" class="headerlink" title="四、配置数据源"></a>四、配置数据源</h2><p>我想将数据库做成可配置的，所以我没有在<code>application.properties</code>文件中直接配置数据库，而是写在了<code>database.json</code>文件中。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"name"</span>: <span class="string">"db_sh"</span>,</div><div class="line">    <span class="attr">"url"</span>: <span class="string">"jdbc:mysql://localhost:3306/db_sh"</span>,</div><div class="line">    <span class="attr">"username"</span>: <span class="string">"root"</span>,</div><div class="line">    <span class="attr">"password"</span>: <span class="string">"root"</span>,</div><div class="line">    <span class="attr">"driveClassName"</span>:<span class="string">"com.mysql.jdbc.Driver"</span></div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"name"</span>: <span class="string">"db_sz"</span>,</div><div class="line">    <span class="attr">"url"</span>: <span class="string">"jdbc:mysql://localhost:3306/db_sz"</span>,</div><div class="line">    <span class="attr">"username"</span>: <span class="string">"root"</span>,</div><div class="line">    <span class="attr">"password"</span>: <span class="string">"root"</span>,</div><div class="line">    <span class="attr">"driveClassName"</span>:<span class="string">"com.mysql.jdbc.Driver"</span></div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<p>然后在springboot读取database文件，加载方式如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Value</span>(<span class="string">"classpath:database.json"</span>)</div><div class="line">    <span class="keyword">private</span> Resource databaseFile;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;Database&gt; <span class="title">databases</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        String databasesString = IOUtils.toString(databaseFile.getInputStream(), Charset.forName(<span class="string">"UTF-8"</span>));</div><div class="line">        List&lt;Database&gt; databases = <span class="keyword">new</span> Gson().fromJson(databasesString, <span class="keyword">new</span> TypeToken&lt;List&lt;Database&gt;&gt;() &#123;</div><div class="line">        &#125;.getType());</div><div class="line">        <span class="keyword">return</span> databases;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>加载完database信息之后，可以通过工厂方法配置逻辑数据库：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="function"><span class="keyword">public</span> HashMap&lt;String, DataSource&gt; <span class="title">dataSourceMap</span><span class="params">(List&lt;Database&gt; databases)</span> </span>&#123;</div><div class="line">    Map&lt;String, DataSource&gt; dataSourceMap = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">    <span class="keyword">for</span> (Database database : databases) &#123;</div><div class="line">        DataSourceBuilder dataSourceBuilder = DataSourceBuilder.create();</div><div class="line">        dataSourceBuilder.url(database.getUrl());</div><div class="line">        dataSourceBuilder.driverClassName(database.getDriveClassName());</div><div class="line">        dataSourceBuilder.username(database.getUsername());</div><div class="line">        dataSourceBuilder.password(database.getPassword());</div><div class="line">        DataSource dataSource = dataSourceBuilder.build();</div><div class="line">        dataSourceMap.put(database.getName(), dataSource);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> dataSourceMap;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这样就把各个逻辑数据库就加载好了。</p>
<h2 id="五、配置分片策略"><a href="#五、配置分片策略" class="headerlink" title="五、配置分片策略"></a>五、配置分片策略</h2><h3 id="5-1数据库分片策略"><a href="#5-1数据库分片策略" class="headerlink" title="5.1数据库分片策略"></a>5.1数据库分片策略</h3><p>在这个实例中，数据库的分库就是根据上海(sh)和深圳(sz)来分的，在sharding-jdbc中是单键分片。根据官方文档实现接口<code>SingleKeyDatabaseShardingAlgorithm</code>就可以</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DatabaseShardingAlgorithm</span> <span class="keyword">implements</span> <span class="title">SingleKeyDatabaseShardingAlgorithm</span>&lt;<span class="title">String</span>&gt; </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据分片值和SQL的=运算符计算分片结果名称集合.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> availableTargetNames 所有的可用目标名称集合, 一般是数据源或表名称</div><div class="line">     * <span class="doctag">@param</span> shardingValue        分片值</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> 分片后指向的目标名称, 一般是数据源或表名称</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">doEqualSharding</span><span class="params">(Collection&lt;String&gt; availableTargetNames, ShardingValue&lt;String&gt; shardingValue)</span> </span>&#123;</div><div class="line">        String databaseName = <span class="string">""</span>;</div><div class="line">        <span class="keyword">for</span> (String targetName : availableTargetNames) &#123;</div><div class="line">            <span class="keyword">if</span> (targetName.endsWith(shardingValue.getValue())) &#123;</div><div class="line">                databaseName = targetName;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> databaseName;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>此接口还有另外两个方法，<code>doInSharding</code>和<code>doBetweenSharding</code>，因为我暂时不用IN和BETWEEN方法，所以就没有写，直接返回null。</p>
<h3 id="5-2数据表分片策略"><a href="#5-2数据表分片策略" class="headerlink" title="5.2数据表分片策略"></a>5.2数据表分片策略</h3><p>数据表的分片策略是根据股票和时间共同决定的，在sharding-jdbc中是多键分片。根据官方文档，实现<code>MultipleKeysTableShardingAlgorithm</code>接口就OK了</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TableShardingAlgorithm</span> <span class="keyword">implements</span> <span class="title">MultipleKeysTableShardingAlgorithm</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据分片值计算分片结果名称集合.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> availableTargetNames 所有的可用目标名称集合, 一般是数据源或表名称</div><div class="line">     * <span class="doctag">@param</span> shardingValues       分片值集合</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> 分片后指向的目标名称集合, 一般是数据源或表名称</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;String&gt; <span class="title">doSharding</span><span class="params">(Collection&lt;String&gt; availableTargetNames, Collection&lt;ShardingValue&lt;?&gt;&gt; shardingValues)</span> </span>&#123;</div><div class="line">        String name = <span class="keyword">null</span>;</div><div class="line">        Date time = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">for</span> (ShardingValue&lt;?&gt; shardingValue : shardingValues) &#123;</div><div class="line">            <span class="keyword">if</span> (shardingValue.getColumnName().equals(<span class="string">"name"</span>)) &#123;</div><div class="line">                name = ((ShardingValue&lt;String&gt;) shardingValue).getValue();</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (shardingValue.getColumnName().equals(<span class="string">"time"</span>)) &#123;</div><div class="line">                time = ((ShardingValue&lt;Date&gt;) shardingValue).getValue();</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (name != <span class="keyword">null</span> &amp;&amp; time != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        String timeString = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy_MM"</span>).format(time);</div><div class="line">        String suffix = name + <span class="string">"_"</span> + timeString;</div><div class="line">        Collection&lt;String&gt; result = <span class="keyword">new</span> LinkedHashSet&lt;&gt;();</div><div class="line">        <span class="keyword">for</span> (String targetName : availableTargetNames) &#123;</div><div class="line">            <span class="keyword">if</span> (targetName.endsWith(suffix)) &#123;</div><div class="line">                result.add(targetName);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这些方法的使用可以查官方文档。</p>
<h3 id="5-3注入分片策略"><a href="#5-3注入分片策略" class="headerlink" title="5.3注入分片策略"></a>5.3注入分片策略</h3><p>以上只是定义了分片算法，还没有形成策略，还没有告诉shrding将哪个字段给分片算法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">public class ShardingStrategyConfig &#123;</div><div class="line">    @Bean</div><div class="line">    public DatabaseShardingStrategy databaseShardingStrategy(DatabaseShardingAlgorithm databaseShardingAlgorithm) &#123;</div><div class="line">        DatabaseShardingStrategy databaseShardingStrategy = new DatabaseShardingStrategy(&quot;exchange&quot;, databaseShardingAlgorithm);</div><div class="line">        return databaseShardingStrategy;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Bean</div><div class="line">    public TableShardingStrategy tableShardingStrategy(TableShardingAlgorithm tableShardingAlgorithm) &#123;</div><div class="line">        Collection&lt;String&gt; columns = new LinkedList&lt;&gt;();</div><div class="line">        columns.add(&quot;name&quot;);</div><div class="line">        columns.add(&quot;time&quot;);</div><div class="line">        TableShardingStrategy tableShardingStrategy = new TableShardingStrategy(columns, tableShardingAlgorithm);</div><div class="line">        return tableShardingStrategy;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这样才能形成完成的分片策略。</p>
<h2 id="六、配置Sharding-jdbc的DataSource"><a href="#六、配置Sharding-jdbc的DataSource" class="headerlink" title="六、配置Sharding-jdbc的DataSource"></a>六、配置Sharding-jdbc的DataSource</h2><p>sharding-jdbc的原理其实很简单，就是自己做一个DataSource给上层应用使用，这个DataSource包含所有的逻辑库和逻辑表，应用增删改查时，他自己再修改sql，然后选择合适的数据库继续操作。所以这个DataSource创建很重要。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="meta">@Primary</span></div><div class="line"><span class="function"><span class="keyword">public</span> DataSource <span class="title">shardingDataSource</span><span class="params">(HashMap&lt;String, DataSource&gt; dataSourceMap, DatabaseShardingStrategy databaseShardingStrategy, TableShardingStrategy tableShardingStrategy)</span> </span>&#123;</div><div class="line">    DataSourceRule dataSourceRule = <span class="keyword">new</span> DataSourceRule(dataSourceMap);</div><div class="line">    TableRule tableRule = TableRule.builder(<span class="string">"tick"</span>).actualTables(Arrays.asList(<span class="string">"db_sh.tick_a_2017_01"</span>, <span class="string">"db_sh.tick_a_2017_02"</span>, <span class="string">"db_sh.tick_b_2017_01"</span>, <span class="string">"db_sh.tick_b_2017_02"</span>, <span class="string">"db_sz.tick_a_2017_01"</span>, <span class="string">"db_sz.tick_a_2017_02"</span>, <span class="string">"db_sz.tick_b_2017_01"</span>, <span class="string">"db_sz.tick_a_2017_02"</span>)).dataSourceRule(dataSourceRule).build();</div><div class="line">    ShardingRule shardingRule = ShardingRule.builder().dataSourceRule(dataSourceRule).tableRules(Arrays.asList(tableRule)).databaseShardingStrategy(databaseShardingStrategy).tableShardingStrategy(tableShardingStrategy).build();</div><div class="line">    DataSource shardingDataSource = ShardingDataSourceFactory.createDataSource(shardingRule);</div><div class="line">    <span class="keyword">return</span> shardingDataSource;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>这里要着重说一下为什么要用@Primary这个注解，没有这个注解是会报错的，错误大致意思就是DataSource太多了，mybatis不知道用哪个。加上这个mybatis就知道用sharding的DataSource了。这里参考的是jpa的多数据源配置</strong></p>
<h2 id="七、配置mybatis"><a href="#七、配置mybatis" class="headerlink" title="七、配置mybatis"></a>七、配置mybatis</h2><h3 id="7-1-Bean"><a href="#7-1-Bean" class="headerlink" title="7.1 Bean"></a>7.1 Bean</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tick</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</div><div class="line">    <span class="keyword">private</span> String name;</div><div class="line">    <span class="keyword">private</span> String exchange;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ask;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> bid;</div><div class="line">    <span class="keyword">private</span> Date time;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="7-2-Mapper"><a href="#7-2-Mapper" class="headerlink" title="7.2 Mapper"></a>7.2 Mapper</h3><p>很简单，只实现一个插入方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Mapper</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TickMapper</span> </span>&#123;</div><div class="line">    <span class="meta">@Insert</span>(<span class="string">"insert into tick (id,name,exchange,ask,bid,time) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;exchange&#125;,#&#123;ask&#125;,#&#123;bid&#125;,#&#123;time&#125;)"</span>)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insertTick</span><span class="params">(Tick tick)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="7-3-SessionFactory配置"><a href="#7-3-SessionFactory配置" class="headerlink" title="7.3 SessionFactory配置"></a>7.3 SessionFactory配置</h3><p>还要设置一下tick的SessionFactory：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">@MapperScan(basePackages = &quot;com.spartajet.shardingboot.mapper&quot;, sqlSessionFactoryRef = &quot;sessionFactory&quot;)</div><div class="line">public class TickSessionFactoryConfig &#123;</div><div class="line">    @Bean</div><div class="line">    public SqlSessionFactory sessionFactory(DataSource shardingDataSource) throws Exception &#123;</div><div class="line">        final SqlSessionFactoryBean sessionFactory = new SqlSessionFactoryBean();</div><div class="line">        sessionFactory.setDataSource(shardingDataSource);</div><div class="line">        return sessionFactory.getObject();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Bean</div><div class="line">    public CommonSelfIdGenerator commonSelfIdGenerator() &#123;</div><div class="line">        CommonSelfIdGenerator.setClock(AbstractClock.systemClock());</div><div class="line">        CommonSelfIdGenerator commonSelfIdGenerator = new CommonSelfIdGenerator();</div><div class="line">        return commonSelfIdGenerator;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里添加了一个<code>CommonSelfIdGenerator</code>，sharding自带的id生成器，看了下代码和<code>facebook</code>的<code>snowflake</code>类似。我又不想把数据库的主键设置成自增的，否则数据双向同步会死的很惨的。</p>
<p>### </p>
<h2 id="八、测试写入"><a href="#八、测试写入" class="headerlink" title="八、测试写入"></a>八、测试写入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">@RunWith(SpringJUnit4ClassRunner.class)</div><div class="line">@SpringBootTest</div><div class="line">public class SpringbootShardingJdbcDemoApplicationTests &#123;</div><div class="line">    @Autowired</div><div class="line">    private TickMapper tickMapper;</div><div class="line">    @Autowired</div><div class="line">    private CommonSelfIdGenerator commonSelfIdGenerator;</div><div class="line">    </div><div class="line">    </div><div class="line">    @Test</div><div class="line">    public void contextLoads() &#123;</div><div class="line">        Tick tick = new Tick(commonSelfIdGenerator.generateId().longValue(), &quot;a&quot;, &quot;sh&quot;, 100, 200, new Date());</div><div class="line">        this.tickMapper.insertTick(tick);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>成功实现增量分库分表！！！</p>
]]></content>
    
    <summary type="html">
    
      项目中遇到了分库分表的问题，找到了shrding-jdbc，于是就搞了一个springboot+sharding-jdbc+mybatis的增量分片的应用。今天写博客总结一下遇到的坑。
    
    </summary>
    
    
      <category term="springboot" scheme="http://blog.spartajet.com/tags/springboot/"/>
    
      <category term="sharding-jdbc" scheme="http://blog.spartajet.com/tags/sharding-jdbc/"/>
    
      <category term="分库分表" scheme="http://blog.spartajet.com/tags/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.spartajet.com/2017/05/19/hello-world/"/>
    <id>http://blog.spartajet.com/2017/05/19/hello-world/</id>
    <published>2017-05-19T21:55:00.000Z</published>
    <updated>2017-05-19T23:53:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      hello world
    
    </summary>
    
    
  </entry>
  
</feed>
